var app =
webpackJsonpapp([0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var config = __webpack_require__(2);
	var wpconfig = __webpack_require__(3);
	__webpack_require__(4).noConflict();
	var wp = window.cf47rsVars;

	if (!wp.var.isFallback) {
	  var fieldInitializer = __webpack_require__(6);
	  var ajaxNotifierIntegration = __webpack_require__(18);
	}

	config.assetsPathPrefix = wpconfig.var.themeUrl + '/public/';


	__webpack_require__(4).noConflict();
	__webpack_require__(17);
	__webpack_require__(22);
	__webpack_require__(20);
	__webpack_require__(23);
	__webpack_require__(24);
	__webpack_require__(25);
	__webpack_require__(26);


	var controller = {
	  // All pages
	  common: function () {

	    if (wp.var.isFallback){
	      __webpack_require__(7).loadSvgWithAjax();
	      __webpack_require__(27)();
	      __webpack_require__(28)();
	      __webpack_require__(29).watch();
	      __webpack_require__(30)();
	      __webpack_require__(31)();
	      __webpack_require__(32)();
	      return;
	    }

	    var utils = __webpack_require__(7);
	    var cssHelpers = __webpack_require__(33);
	    __webpack_require__(29).watch();
	    utils.loadSvgWithAjax();
	    __webpack_require__(35).init(wpconfig.activeWidgets);
	    __webpack_require__(49)();
	    __webpack_require__(55)();
	    __webpack_require__(58)();
	    __webpack_require__(59)();
	    __webpack_require__(60)();
	    __webpack_require__(63)(true);
	    __webpack_require__(68)(__webpack_require__(48).loadContent);
	    __webpack_require__(70)(wpconfig.template);
	    __webpack_require__(71)(wpconfig.initModules);
	    __webpack_require__(84)();
	    __webpack_require__(27)();
	    __webpack_require__(28)();
	    __webpack_require__(10).initRangeInput();
	    __webpack_require__(30)();
	    __webpack_require__(88)(wpconfig.initModules);

	    wpconfig.initField.forEach(function (field) {
	      fieldInitializer.init(field.name, field);
	    });

	    $('select').select2();

	    ajaxNotifierIntegration.enable();
	    cssHelpers.initParsleyHelper();

	    if (!wpconfig.var.isLoggedIn) {
	      __webpack_require__(89).initLoginForm();
	    }

	    if (wpconfig.var.enableAuth) {
	      __webpack_require__(90)();
	      __webpack_require__(89).initRegisterForm();
	    }

	    if (wpconfig.var.isScrollupEnabled) {
	      __webpack_require__(31)();
	    }

	    if (wpconfig.var.fixedMenu) {
	      __webpack_require__(32)();
	    }

	    __webpack_require__(19).watchNotifications(wpconfig.messages);

	    if (!wpconfig.var.isCustomizer) {
	      window.onbeforeunload = function (e) {
	        if (/^(tel|mailto)/.test(e.target.activeElement.href)) return;
	        var preloader = __webpack_require__(7).setContainerProcessingState;
	        preloader($('body'), false, true);
	      };
	    }
	  },
	  submitList: __webpack_require__(91),
	  submitForm: __webpack_require__(92)
	};

	// The routing fires all common scripts, followed by the page specific scripts.
	// Add additional events for more control over timing e.g. a finalize event
	var UTIL = {
	  fire: function (func, funcname, args) {
	    var namespace = controller;
	    if (func !== '' && namespace[func] && typeof namespace[func] === 'function') {
	      namespace[func]();
	    }
	  },
	  loadEvents: function () {
	    UTIL.fire('common');
	    var controller = $('body').data('controller');
	    if (controller && controller.length) {
	      UTIL.fire(controller);
	    }
	  }
	};

	$(document).ready(UTIL.loadEvents);


	module.exports = {};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = jQuery;

/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	module.exports = {
	  colorTheme: 'default',
	  assetsPathPrefix: 'assets/',
	  latitude: "33.74229160384012",
	  longitude: "-117.86845207214355",
	  ajaxUrl: null,
	  wp: null
	};


/***/ },
/* 3 */
/***/ function(module, exports) {

	/**
	 * @namespace
	 * @type {object}
	 * @property {string} screenId
	 * @property {Object[]} activeWidgets
	 * @property {Object[]} template
	 * @property {Object[]} initField
	 * @property {Object[]} initModules
	 * @property {Object[]} route
	 * @property {Object[]} var
	 * @property {Object[]} template
	 * @property {Object[]} messages
	 * @property {Object[]} i18n
	 * @property {string} var.isCustomizer
	 * @property {string} var.fixedMenu
	 * @property {string} var.enableAuth
	 * @property {string} var.isLoggedIn
	 * @property {string} var.ajaxUrl
	 * @property {string} var.themeUrl
	 * @property {string} route.agentContact
	 * @property {string} route.propertyMapSearch
	 */
	module.exports = window.cf47rsVars;

/***/ },
/* 4 */,
/* 5 */,
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var utils = __webpack_require__(7);
	var _ = __webpack_require__(4);

	var initializer = {
	  rangeslider: __webpack_require__(8),
	  textinput: function (name, options) {
	  },
	  choice: __webpack_require__(11),
	  choiceExpanded: __webpack_require__(12)
	};

	module.exports = {
	  /**
	   *
	   * @param fieldName
	   * @param {Object} options
	   * @param {string} options.type
	   */
	  init: function (fieldName, options) {
	    if (options.type) {
	      initializer[options.type](fieldName, options);
	    } else {
	      throw 'Undefined field type ' + fieldName;
	    }
	  }
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	//exports.centerElementInViewport = function (DOMElement) {
	//    require('jquery-smooth-scroll');
	//    var elementHeight,
	//        elementOffset,
	//        windowHeight,
	//        offset,
	//        $element;
	//
	//    $(window).on('DOMContentLoaded load', function () {
	//        if (!exports.isElementInViewport(DOMElement)) {
	//            $element = $(DOMElement);
	//            elementOffset = $element.offset().top;
	//            elementHeight = $element.height();
	//            windowHeight = $(window).height();
	//
	//            if (elementHeight < windowHeight) {
	//                offset = elementOffset - ((windowHeight / 2) - (elementHeight / 2));
	//            }
	//            else {
	//                offset = elementOffset;
	//            }
	//            $.smoothScroll({speed: 500}, offset);
	//        }
	//    });
	//};

	exports.isElementInViewport = function (DOMElement) {
	  var rect = DOMElement.getBoundingClientRect();
	  var windowHeight = (window.innerHeight || document.documentElement.clientHeight);
	  var windowWidth = (window.innerWidth || document.documentElement.clientWidth);

	  return (
	    (rect.left >= 0)
	    && (rect.top >= 0)
	    && ((rect.left + rect.width) <= windowWidth)
	    && ((rect.top + rect.height) <= windowHeight)
	  );
	};

	exports.focusInputOnLoad = function (inputName) {
	  var element = document.getElementsByName(inputName)[0];
	  if (element) {
	    element.focus();
	    exports.centerElementInViewport(element);
	  }
	};

	exports.setFormProcessingState = function ($form, promise, noValidator) {
	  if (noValidator === undefined) {
	    noValidator = true;
	  }

	  exports.setProcessingState($form.find(':submit'), promise, $form);
	};

	exports.setProcessingState = function ($clickableElement, promise, $secondaryElement) {
	  var $htmlHelper = false;
	  if (!$clickableElement.hasClass('button--loading') && promise.state() === 'pending') {
	    $clickableElement.addClass('button__default--reset button--loading');

	    if ($secondaryElement) {
	      $secondaryElement.wrap('<div class="loading-overlay"></div>');
	      $htmlHelper = $('<div class="loading"></div>').appendTo($secondaryElement.parent());
	    }


	    $clickableElement.on('click.blocker', function (event) {
	      if (promise.state() === 'pending') {
	        event.stopImmediatePropagation();
	        alert('please wait');
	        return false;
	      } else {
	        $clickableElement.off('click.blocker');
	      }
	    });

	    promise.always(function () {
	      $clickableElement.removeClass('button__default--reset button--loading');
	      if ($secondaryElement) {
	        $secondaryElement.unwrap();
	        $htmlHelper.remove();
	      }
	      $clickableElement.off('click.blocker');
	    });
	  }
	};

	exports.setContainerProcessingState = function ($container, promise, wrapInner, infinite) {
	  var $htmlHelper = false;
	  wrapInner = wrapInner === true;
	  infinite = infinite === true;

	  if (!promise) {
	    promise = $.Deferred($.noop);
	  }

	  if (promise.state() === 'pending') {
	    var classLoading = wrapInner ? 'loading loading--fixed' : 'loading';
	    $htmlHelper = $('<div class="' + classLoading + '"></div>');
	    $container.addClass('loading-overlay');
	    $container.append($htmlHelper);
	    if (infinite === false) {
	      promise.always(function () {
	        $container.removeClass('loading-overlay');
	        $htmlHelper.remove();
	      });
	    }
	  }
	};

	exports.closeOutside = function ($element, eventCallback) {
	  var notH = 1,
	    $pop = $element.on('hover', function () {
	      notH ^= 1;
	    });

	  $(document).on('mousedown keydown', function (e) {
	    if (notH || e.which == 27) {
	      eventCallback();
	    }
	  });
	};

	exports.abbreviateNumber = function (number, i18n) {
	  // 2 decimal places => 100, 3 => 1000, etc
	  var decPlaces = Math.pow(10, 0);
	  var abbrev;
	  // Enumerate number abbreviations

	  if (i18n) {
	    abbrev = i18n;
	  } else {
	    abbrev = ["k", "m", "b", "t"];
	  }


	  // Go through the array backwards, so we do the largest first
	  for (var i = abbrev.length - 1; i >= 0; i--) {

	    // Convert array index to "1000", "1000000", etc
	    var size = Math.pow(10, (i + 1) * 3);

	    // If the number is bigger or equal do the abbreviation
	    if (size <= number) {
	      // Here, we multiply by decPlaces, round, and then divide by decPlaces.
	      // This gives us nice rounding to a particular decimal place.
	      number = Math.round(number * decPlaces / size) / decPlaces;

	      // Handle special case where we round up to the next abbreviation
	      if ((number == 1000) && (i < abbrev.length - 1)) {
	        number = 1;
	        i++;
	      }

	      // Add the letter for the abbreviation
	      number += abbrev[i];

	      // We are done... stop
	      break;
	    }
	  }

	  return number;
	};

	exports.loadSvgWithAjax = function () {
	  var config = __webpack_require__(2);
	  $(document.body).prepend($('<div>').load(config.assetsPathPrefix + 'img/sprite-inline.svg'));
	};

	exports.formTemplate = function (template) {
	  var _ = __webpack_require__(4);
	  return _.template(template, {interpolate: /__:([\s\S]+?)__/g});
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {__webpack_require__(9);
	var utils = __webpack_require__(7);
	var config = __webpack_require__(3);
	var _ = __webpack_require__(4);

	var rangeInput = __webpack_require__(10);

	/**
	 * @param name
	 * @param {Object} options
	 * @param {number} options.min
	 * @param {number} options.max
	 * @param {number} options.from
	 * @param {number} options.to
	 * @param {number} options.id
	 * @param {number} options.type
	 */
	module.exports = function (name, options) {
	  var pluginOptions = {
	    type: "double",
	    hide_min_max: true,
	    hide_from_to: false,
	    grid: false,
	    force_edges: true,
	    max_postfix: '+',
	    min: options.min,
	    max: options.max,
	    prefix: options.prefix,
	    onFinish: rangeInput.rangeInputInteraction
	    //grid: true,
	    //grid_snap: true,
	    // converts numbers like 4000000 to 4m, remove if you don't like it
	  };

	  if (options.abbreviate === true) {
	    pluginOptions.prettify = function (value) {
	      return utils.abbreviateNumber(value, config.i18n.numberAbbr)
	    };
	  }

	  switch (name) {
	    case 'price':
	      _.defaults({
	        step: 100000
	      }, pluginOptions);
	      break;

	    default:
	      _.defaults(pluginOptions);
	      break;
	  }


	  var $element = $('#' + options.id).ionRangeSlider(pluginOptions);
	  // reset range slider
	  $element.closest('form').on('reset', function () {
	    // Save slider instance
	    var slider = $element.data("ionRangeSlider");
	    slider.update({from: slider.options.min, to: slider.options.max});
	    // Call sliders reset method
	    slider.reset();
	  });


	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 9 */,
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {exports.rangeInputInteraction = function(slider) {
	  var $sliderInput = $(slider.input);
	  var $formGroup = $sliderInput.closest('.form-group');
	  var $formInputFrom = $formGroup.find('input[data-field-type="from"]');
	  var $formInputTo = $formGroup.find('input[data-field-type="to"]');
	  if ($formInputFrom.length) $formInputFrom.val(slider.from);
	  if ($formInputTo.length) $formInputTo.val(slider.to);

	  $sliderInput.trigger('input');
	};

	exports.initRangeInput = function () {
	  $('[data-form-field]').on('input', function () {
	    var $inputFieldRange = $(this);
	    var $formGroup = $inputFieldRange.closest('.form-group');
	    var $formRange = $formGroup.find(".js-form-range");
	    var $sliderInput = $formRange.data("ionRangeSlider");
	    var key = $inputFieldRange.data('field-type');

	    var $formInputFrom = $formGroup.find('input[data-field-type="from"]');
	    var $formInputTo = $formGroup.find('input[data-field-type="to"]');
	    var value = $inputFieldRange.val();

	    var options = {};
	    options[key] = value;
	    $formRange.val($formInputFrom.val() + ';' + $formInputTo.val());

	    // Call sliders update method
	    $sliderInput.update(options);
	  });

	  $('.js-input-mode').on('click', function () {
	    var $inputModeBtn = $(this);
	    var $formGroup = $inputModeBtn.closest('.form-group');
	    var classMode = $inputModeBtn.data('mode');
	    var newText = $inputModeBtn.data('toggleValue');
	    var mode = $inputModeBtn.data('mode') === 'input' ? 'range' : 'input';

	    $inputModeBtn.data('toggleValue', $inputModeBtn.text());
	    $formGroup.removeClass('form-group--input').removeClass('form-group--range');
	    $formGroup.addClass('form-group--' + classMode);
	    $inputModeBtn.data('mode', mode);
	    $inputModeBtn.text(newText);
	  });
	};

	exports.initRangeCommission = function () {
	  $('.js-input-commision').on('click', function () {
	    var $inputModeBtn = $(this);
	    var $formGroup = $inputModeBtn.closest('.form-group');
	    var $fieldRange = $formGroup.find('.js-field-range');
	    var mode = $inputModeBtn.data('mode');
	    var newMode = $inputModeBtn.data('mode') === 'rm' ? 'percent' : 'rm';
	    var $sliderInput = $formGroup.find(".js-search-range").data("ionRangeSlider");

	    var options = {};
	    if (mode === 'rm') {
	      options = {
	        min: 0,
	        max: 10000,
	        from: 0,
	        to: 10000,
	        max_postfix: '+',
	        prefix: 'RM ',
	        postfix: ''
	      }
	    } else {
	      options = {
	        min: 0,
	        max: 100,
	        from: 0,
	        to: 100,
	        max_postfix: '',
	        prefix: '',
	        postfix: '%'
	      }

	    }

	    // Call sliders update method
	    $sliderInput.update(options);

	    $inputModeBtn.data('mode', newMode);
	    $inputModeBtn.text(newMode);
	    $fieldRange.val('')
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {module.exports = function (name, option) {
	  var $element = $('#' + option.id).select2();
	  $element.closest('form').on('reset', function () {
	    $element.select2("val", "");
	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/**
	 *
	 * @param name
	 * @param {Object} options
	 * @param {string} options.isTree
	 */
	module.exports = function (name, options) {
	  __webpack_require__(13);
	  __webpack_require__(15);
	  __webpack_require__(17);

	  var $root = $('#' + options.id);
	  var $dropdownMenu = $root.find('.js-dropdown-menu');
	  var $showBtn = $root.find('.js-select-checkboxes-btn');
	  var showBtnPlaceholder = $showBtn.data('placeholder');

	  function updateDropdownContainer() {
	    var labels = [];
	    $dropdownMenu.find('input:checked').each(function () {
	      var name = $(this).next('label').text();
	      labels.push(name);
	    });
	    $($showBtn).html(labels.join(', ') || showBtnPlaceholder);
	  }

	  function reset() {
	    var $selectCheckboxesDropdown = $root.find('.js-select-checkboxes');

	    $selectCheckboxesDropdown
	      .find('input')
	      .prop({
	        checked: false,
	        indeterminate: false
	      });
	    $selectCheckboxesDropdown
	      .find('input')
	      .first()
	      .trigger('change');

	  }

	  updateDropdownContainer();

	  $root.on('click', '.js-dropdown-menu', function (e) {
	    e.stopPropagation();
	  });

	  $dropdownMenu.on('change', 'input', function () {
	    updateDropdownContainer();
	  });

	  $root.find('.js-select-checkboxes-reset').on('click', function () {
	    reset();
	  });

	  $root.find('.js-select-checkboxes-accept').on('click', function () {
	    var $this = $(this);
	    var $selectCheckboxesDropdown = $this.closest('.js-select-checkboxes');

	    $selectCheckboxesDropdown
	      .closest('.dropdown')
	      .removeClass('open');
	  });


	  $('body').on('click', '.js-dropdown-menu', function (e) {
	    e.stopPropagation();
	  });

	  $root.closest('form').on('reset', function () {
	    reset();
	  });

	  if (options.isTree) {
	    var tree = $root.find('.js-tree');
	    tree.bonsai();
	    tree.qubit();
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(14);

/***/ },
/* 14 */,
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(16);

/***/ },
/* 16 */,
/* 17 */,
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var notifier = __webpack_require__(19);
	exports.enable = function () {
	  $(document)
	    .ajaxError(function (event, request, settings) {
	      if (request.status === 500) {
	        notifier.showServerError();
	      } else {
	        if (request.responseJSON && request.responseJSON.error) {
	          notifier.showError(request.responseJSON.error);
	        } else {
	          notifier.showServerError();
	        }
	      }
	    })
	    .ajaxSuccess(function (event, request) {
	      if (request.responseJSON && request.responseJSON.result && request.responseJSON.result.message) {
	        notifier.showSuccess(request.responseJSON.result.message);
	      }
	    })
	  ;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/***************************************************************
	 * A helper for displaying notification at the top of the page
	 * Usually this is useful in AJAX requests, in order to provide
	 * a feedback to users over the request status
	 *
	 * You can use methods:
	 * - app.notifier.showError
	 * - app.notifier.showServerError
	 * - app.notifier.showSuccess
	 *
	 * Optionally you can pass a `message` as the first argument
	 * in order to provide custom text
	 *
	 * See https://github.com/sciactive/pnotify for documentation
	 ==============================================================*/
	var _ = __webpack_require__(4);
	var PNotify = __webpack_require__(20);

	var conf = {
	  icon: false,
	  text: false,
	  title_escape: false,
	  addclass: "stack-bar-top",
	  cornerclass: "",
	  width: "100%",
	  stack: {"dir1": "down", "dir2": "right", "push": "top", "spacing1": 0, "spacing2": 0},
	  delay: 2000
	};

	var getTemplate = function (type, message) {
	  type = type == 'error' ? 'error' : 'valid';
	  var html = '<svg class="notify-icon"><use xlink:href="#icon-' + type + '"></use></svg>' + message;
	  return html;
	};
	exports.showError = function (message) {
	  message = message || 'An error occured, please see details below';
	  new PNotify(_.merge(conf, {
	    title: getTemplate('error', message),
	    type: 'error'
	  }));
	};

	exports.showServerError = function (message) {
	  message = message || 'Server error occured, please contact website administrator.';
	  new PNotify(_.merge(conf, {
	    title: getTemplate('error', message),
	    type: 'error'
	  }));
	};

	exports.showSuccess = function (message) {
	  message = message || 'An error occured, please see details below';
	  new PNotify(_.merge(conf, {
	    title: getTemplate('success', message),
	    type: 'success'
	  }));
	};

	exports.watchNotifications = function (messages) {
	  _.each(messages, function (message) {
	    if (message.type === 'error') {
	      exports.showError(message.message);
	    } else {
	      exports.showSuccess(message.message);
	    }
	  });
	};


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(21);

/***/ },
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {$.fn.dataByPrefix = function( pr ){
	  var d=this.data(), r=new RegExp("^"+pr), ob={};
	  for(var k in d) if(r.test(k)) ob[k]=d[k];
	  return ob;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * UI Module for opening collapsed blocks on small screens
	 ==============================================================*/
	module.exports = function () {
	  var $toggleBtn = $('.js-goto-btn');

	  $toggleBtn.on('click', function () {
	    var $btn = $(this);
	    var $target = $($btn.data('goto-target'));
	    var $targetWidget = $target.closest('.js-widget');

	    var offsetTop = $targetWidget.offset().top;
	    var time = 800 + (offsetTop / 10);
	    $('html, body').animate({scrollTop: offsetTop}, time, 'linear', function () {
	      $targetWidget.addClass('widget--opened');
	    });

	  });


	  $('.sidebar .js-widget-btn, .widget--collapsing .js-widget-btn').on('click', function(){
	    var $widget = $(this).closest('.js-widget');
	    $widget.addClass('widget--opened');
	    return false
	  });


	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var _ = __webpack_require__(4);
	module.exports = function () {
	  /**
	   * Display language bar in responsive mode
	   */

	  var $navBar = $('#navbar-collapse-1'),
	    $siteWrap = $('.js-site-wrap'),
	    $navbarRow = $('.js-navbar-row'),
	    $navbarToggle = $('.js-navbar-toggle'),
	    $header = $('.header'),
	    $navBarClone;

	  var gridSize = __webpack_require__(29);

	  var xDown = null;
	  var yDown = null;

	  function handleTouchStart(evt) {
	    xDown = evt.touches[0].clientX;
	    yDown = evt.touches[0].clientY;
	  }

	  function handleTouchMove(evt) {
	    if (!xDown || !yDown || !evt) {
	      return;
	    }

	    var xUp = evt.touches[0].clientX;
	    var yUp = evt.touches[0].clientY;

	    var xDiff = xDown - xUp;
	    var yDiff = yDown - yUp;

	    if (Math.abs(xDiff) > Math.abs(yDiff)) {/*most significant*/
	      if (xDiff > 0) {
	        /* left swipe */
	      } else {
	        /* right swipe */
	        if ($navBar.hasClass('opened')) {
	          requestAnimationFrame(function () {
	            $navbarToggle.removeClass('collapsed');
	            $header.removeClass('header--mob-opened');
	            $navBar.removeClass('opened');
	          });
	        }
	      }
	    } else {
	      if (yDiff > 0) {
	        /* up swipe */
	      } else {
	        /* down swipe */
	      }
	    }
	    /* reset values */
	    xDown = null;
	    yDown = null;
	  }

	  function moveMenu (mobile) {
	    $navBarClone = $navBar.detach();
	    if(mobile) {
	      $siteWrap.before($navBarClone);
	      $navBarClone.addClass('navbar__wrap--init');
	    } else {
	      $navbarRow.append($navBarClone);
	      $navBarClone.removeClass('navbar__wrap--init');
	      $siteWrap.removeClass('site-wrap--move');
	      $navbarToggle.removeClass('js-navbar-toggle');

	    }
	  }

	  function initMenu () {
	    if (gridSize.get() === 'xs') {
	      document.addEventListener('touchstart', handleTouchStart, false);
	      document.addEventListener('touchmove', handleTouchMove, false);
	      handleTouchMove();
	      moveMenu(true);
	    } else {
	      // feature check direction where open dropdown menu
	      $('.js-dropdown').each(function (i, item) {
	        var $dropdown = $(item).find('.js-dropdown-menu');
	        var offsetLeft = $(item).offset().left;
	        var offsetRight = ($(window).width() - ($(item).offset().left + $(item).outerWidth()));
	        var rtl = $('body').hasClass('rtl');
	        $dropdown.removeClass('navbar__dropdown--left').removeClass('navbar__dropdown--right');
	        if (offsetLeft < $dropdown.width() ) {
	          $dropdown.addClass('navbar__dropdown--' + (rtl ? 'right' : 'left') );
	        } else if (offsetRight < $dropdown.width() ){
	          $dropdown.addClass('navbar__dropdown--' + (rtl ? 'left' : 'right'));
	        }
	      });

	      moveMenu(false);
	    }
	  }

	  $navbarToggle.on('click', function () {
	    var $this = $(this);
	    requestAnimationFrame(function () {
	      $this.toggleClass('collapsed');
	      requestAnimationFrame(function () {
	        // $siteWrap.toggleClass('site-wrap--move');
	        $header.toggleClass('header--mob-opened');
	        $navBar.toggleClass('opened');
	      });
	    });
	  });

	  $('.js-dropdown > a').on('click', function () {
	    var $dropdown = $(this).closest('.js-dropdown');
	    if ($dropdown.hasClass('open')) {
	      $dropdown.removeClass('open');
	    } else {
	      if (gridSize.get() === 'xs') {
	        $('html, body').scrollTop(0);
	      }
	      $dropdown.addClass('open');
	    }
	    if (gridSize.get() === 'xs') {
	      return false;
	    }
	  });

	  $('.js-navbar-sublink')
	    .on('click', function () {
	      var parentItem = $(this).closest('li');
	      parentItem.addClass('open');
	    });

	  $('.js-navbar-submenu-back').on('click', function () {
	    var parentItem = $(this).closest('.js-dropdown');
	    parentItem.removeClass('open');
	  });

	  initMenu();

	  var throttledNavMove = _.throttle(initMenu, 500);
	  $(window).resize(throttledNavMove);
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * JS helper for improving responsive experience
	 ==============================================================*/
	var currentGridSize = null;

	exports.get = function () {
	  return currentGridSize;
	};

	exports.watch = function () {
	  var winWidth = window.innerWidth,
	    screenList = ['xs', 'sm', 'md', 'lg'],
	    $body = $('body');

	  function checkScreen(width) {
	    currentGridSize = screenList[0];

	    if (width < 767) currentGridSize = screenList[0];
	    if (width >= 767) currentGridSize = screenList[1];
	    if (width > 992) currentGridSize = screenList[2];
	    if (width > 1200) currentGridSize = screenList[3];

	    $body.removeClass(screenList.join(' '));
	    $body.addClass(currentGridSize);
	  }

	  checkScreen(winWidth);

	  $(window).resize(function () {
	    checkScreen(window.innerWidth);
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {/***************************************************************
	 * Code that adds supports for collapsing some blocks on
	 * small displays and replacing them with buttons, clicking
	 * which, would reveal the hidden block.
	 *
	 * This is done for saving limited screen space
	 * on small displays and improving UX.
	 ==============================================================*/

	module.exports = function () {
	  $('.js-box').on('click', '.js-unhide', function () {
	    var $btn = $(this);
	    var $target = $btn.data('target');
	    var type = $btn.data('type') || 'widget';

	    if ($target === undefined) {
	      $target = $btn.prev();
	      type = 'simple';
	      if (!$target.hasClass('js-unhide-block')) {
	        $target = $btn.closest('.js-unhide-block');
	        type = 'widget';
	      }
	    } else {
	      $target = $('.' + $target);
	    }

	    if (!$target.length) {
	      throw 'Invalid element target';
	    }

	    switch (type) {
	      case 'widget':
	        $target.addClass('opened');
	        break;

	      case 'simple':
	        $target.show();
	        break;
	    }

	    $btn.hide();
	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * "Scroll to top" button
	 ==============================================================*/
	var _ = __webpack_require__(4);
	module.exports = function () {
	  var $scrollup = $('.js-scrollup'),
	    scrollupClass = '',
	    _cssClass = null;

	  var setScrollupClass = function () {
	    var offsetTop = $(window).scrollTop();
	    if (offsetTop > 400) {
	      scrollupClass = 'scrollup-show';
	    } else {
	      scrollupClass = '';
	    }

	    if (scrollupClass !== _cssClass) {
	      $scrollup.removeClass('scrollup-show');
	      $scrollup.addClass(scrollupClass);
	      _cssClass = scrollupClass;
	    }
	  };

	  $(window).on('scroll', _.debounce(setScrollupClass, 800));
	  $scrollup.on('click', function () {
	    var offsetTop = $(window).scrollTop();
	    var time = 800 + (offsetTop / 10);
	    $('html, body').animate({scrollTop: 0}, time, 'linear');
	  });

	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * Enables fixed menu
	 * Enables fixed search bar in mobile view
	 ==============================================================*/
	module.exports = function () {
	  var _ = __webpack_require__(4);
	  var gridSize = __webpack_require__(29);
	  var $header = $('.header'),
	    $headerNav = $('#header-nav'),
	    $headerNavOffset = $('#header-nav-offset'),
	    $navbarCollapse = $('#navbar-collapse-1'),
	    setCssClass = '',
	    lgOffset = $headerNav.offset().top + 2000,
	    _cssClass = null;

	  // set height for placeholder only if the navbar has not positioned absolute
	  if (!$headerNav.hasClass('navbar--overlay')) $headerNavOffset.height($headerNav.height());

	  var setHeaderClass = function () {
	    var offsetTop = $(window).scrollTop();
	    if (offsetTop > lgOffset) {
	      setCssClass = 'header-fixed';
	    } else {
	      setCssClass = '';
	    }
	    if (gridSize.get() !== 'xs') {
	      if (setCssClass !== _cssClass) {
	        $header.removeClass('header-fixed').addClass(setCssClass);
	        $headerNav.removeClass('header-fixed').addClass(setCssClass);
	        $headerNavOffset.removeClass('header-fixed').addClass(setCssClass);
	        $navbarCollapse.removeClass('header-fixed').addClass(setCssClass);
	        _cssClass = setCssClass;
	      }

	    }
	  };

	  $(window).on('scroll', _.debounce(setHeaderClass, 10));
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {exports.initParsleyHelper = function () {
	  __webpack_require__(34);
	  var $elements = $('.js-parsley');
	  if ($elements.length) {
	    $elements.parsley();
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 34 */,
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	exports.init = function (activeWidgets) {
	  var _ = __webpack_require__(4);
	  var utils = __webpack_require__(7);
	  var widgetInitializers = {
	    'cf47rs-partners': __webpack_require__(36),
	    'cf47rs-testimonials': function (widgetInstances) {
	      _.forEach(widgetInstances, function (options, instanceId) {
	        __webpack_require__(37);
	        var $container = $('#' + instanceId);
	        var $slider = $container.find('.js-review-slider');
	        var loader = __webpack_require__(38);
	        loader.loadPaged(
	          instanceId,
	          options.totalPages,
	          $slider
	        );
	        $slider.slick({
	          dots: false,
	          infinite: true,
	          speed: 300,
	          slidesToShow: 1,
	          prevArrow: $container.find('.js-review-prev'),
	          nextArrow: $container.find('.js-review-next')
	        });
	      })
	    },
	    'cf47rs-property-map': function (widgetInstances) {
	      _.forEach(widgetInstances, function (options, instanceId) {
	        var $container = $('#' + instanceId);
	        var gmap = __webpack_require__(39);
	        var loader = __webpack_require__(38).load;
	        __webpack_require__(44)($container);
	        gmap.createMap($container.find('.js-map-canvas')[0], {
	          center: gmap.createGoogleLatLng(options.lat, options.lng),
	          zoom: options.zoom
	        }, options.properties, {
	          ajaxInfobox: function (id) {
	            return loader(instanceId, {
	              'property_id': id
	            });
	          },
	          clustering: options.clustering
	        });

	        if ($(window).width() < 768) {
	          $($container.find('.js-map-canvas')).css({
	            width: $(window).width(),
	            height: $(window).height()
	          });
	          $.fancybox.open($container.find('.js-map-canvas')[0], {
	            padding: 0,
	            margin: 0,
	            fitToView: true
	          });
	        }
	      })
	    },
	    'cf47rs-property-filter': __webpack_require__(46),
	    'cf47rs-single-agent': __webpack_require__(47)
	  };
	  _.forEach(activeWidgets, function (widgetInstances, widgetId) {
	    _.forEach(widgetInstances, function (options, instanceId) {
	      if (widgetInitializers[widgetId]) {
	        widgetInitializers[widgetId](instanceId, options);
	      }
	    });
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	__webpack_require__(37);
	var wpconfig = __webpack_require__(3);
	module.exports = function (instanceId) {
	  var $container = $('#' + instanceId);
	  $container
	    .find('.js-slick-slider')
	    .slick({
	      dots: false,
	      infinite: true,
	      speed: 300,
	      slidesToShow: 1,
	      autoplay: true,
	      prevArrow: $container.find('.js-partners-prev'),
	      nextArrow: $container.find('.js-partners-next'),
	      rtl: wpconfig.var.isRtl,
	      responsive: [
	        {
	          breakpoint: 1100,
	          settings: {
	            slidesToShow: 4
	          }
	        },
	        {
	          breakpoint: 1000,
	          settings: {
	            slidesToShow: 3
	          }
	        },
	        {
	          breakpoint: 768,
	          settings: {
	            slidesToShow: 1
	          }
	        }
	      ]
	    })
	  ;

	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 37 */,
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var _ = __webpack_require__(4);
	var $ = __webpack_require__(1);
	var holder = __webpack_require__(23);
	var wpconfig = __webpack_require__(3);
	exports.load = function (instanceId, params) {
	  return $
	    .getJSON(wpconfig.var.ajaxUrl, _.defaults(params, {
	      action: 'w-' + instanceId
	    }))
	    .done(function () {
	      holder.run();
	    });
	};

	exports.loadPaged = function (instanceId, totalPages, slick) {
	  var utils = __webpack_require__(7);
	  var currentPage = 1;
	  var $container = $('#' + instanceId);
	  var $dataContainer = $container.find('.js-data-container');
	  var $loadMore = $container.find('.js-loadmore');
	  slick = slick || false;

	  var load = function (page) {
	    return $
	      .getJSON(wpconfig.var.ajaxUrl, {
	        page: page,
	        action: 'w-' + instanceId
	      })
	      .done(function (data) {
	        if (slick !== false) {
	          slick.slick('slickAdd', data.result.html);
	          slick.slick('slickNext');
	        } else {
	          $dataContainer.append(data.result.html);
	        }
	        holder.run();
	      })
	  };

	  var loadNextPage = function () {
	    var nextPage = currentPage + 1;
	    if (nextPage <= totalPages) {
	      return load(nextPage).done(function () {
	        currentPage = nextPage;
	        if (currentPage >= totalPages && $loadMore && slick === false) {
	          $loadMore.addClass('hide');
	        }
	      });
	    }
	    return false;
	  };


	  $loadMore.on('click', function (event) {
	    event.preventDefault();
	    if (slick === false ||
	      (slick !== false && (slick.slick('slickCurrentSlide') + 1) < totalPages && (slick.slick('slickCurrentSlide') + 1) == currentPage)) {
	      utils.setProcessingState(
	        $loadMore,
	        loadNextPage(),
	        $dataContainer
	      );
	      return false;
	    } else if (slick !== false) {
	      slick.slick('slickNext');
	    }
	  });


	  return {
	    loadNextPage: loadNextPage
	  };
	};


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var _ = __webpack_require__(4);
	var clusterer = __webpack_require__(40);

	function initPanorama() {
	  new google.maps.StreetViewPanorama(container, panoramaOptions);
	}


	exports.createGoogleLatLng = function (lat, lng) {
	  return new google.maps.LatLng(lat, lng);
	};

	exports.createMap = function (container, mapOptions, markerData, settings) {
	  var map, currentInfobox, markers = [];
	  //var bounds = new google.maps.LatLngBounds();

	  mapOptions = _.defaults({
	    scrollwheel: false,
	    mapTypeId: google.maps.MapTypeId.ROADMAP
	  }, mapOptions);

	  settings = _.defaults(settings, {
	    ajaxInfobox: false,
	    theme: 'black',
	    clustering: true
	  });

	  map = new google.maps.Map(container, mapOptions);

	  _.forEach(markerData, function (marker) {
	    markers.push(createInfoboxMarker(marker));
	  });

	  if (settings.clustering) {
	    enableClustering();
	  }

	  function createMarker(latlng, title) {
	    //bounds.extend(latlng);
	    //map.fitBounds(bounds);
	    //TODO change marker icons from settings
	    return new google.maps.Marker({
	      position: latlng,
	      map: map,
	      title: title,
	      icon: {
	        url: app.themeurl + '/assets/img/marker/default.png',
	        origin: new google.maps.Point(0, 0),
	        anchor: new google.maps.Point(15, 47)
	      }
	    })
	  }

	  function createInfoboxMarker(data, theme) {
	    var infoboxBuilder = __webpack_require__(41);
	    var markerBuilder = __webpack_require__(43);

	    var infobox = infoboxBuilder.create(data.content, theme);
	    var marker = createMarker(exports.createGoogleLatLng(data.lat, data.lng), data.address);

	    google.maps.event.addListener(marker, 'click', function () {
	      if (_.isFunction(settings.ajaxInfobox) && !infobox.ajaxLoaded) {
	        settings.ajaxInfobox(data.id).done(function (data) {
	          infobox.setContent(data.result.html);
	          infobox.ajaxLoaded = true;
	        });
	      }
	      if (currentInfobox) {
	        currentInfobox.setVisible(false);
	      }
	      currentInfobox = infobox;
	      infobox.open(map, marker);
	      currentInfobox.setVisible(true);
	    });

	    google.maps.event.addListener(map, 'click', function () {
	      if (currentInfobox) {
	        currentInfobox.setVisible(false);
	      }
	      currentInfobox = false;
	    });

	    return marker;
	  }

	  function enableClustering() {
	    new clusterer(map, markers, {
	      maxZoom: 11,
	      gridSize: 100,
	      styles: [{
	        url: app.themeurl + '/assets/img/marker.svg',
	        width: 34,
	        height: 47,
	        anchorText: [-7, 18],
	        anchorIcon: [15, 47],
	        textColor: '#fff',
	        textSize: 10
	      }]
	    })
	  }
	};


/***/ },
/* 40 */,
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(4);
	var createStandalone = function (content, options) {
	  var config = __webpack_require__(2);
	  var infoboxBuilder = __webpack_require__(42);
	  options = _.defaultsDeep(options || {}, {
	    theme: 'white',
	    infobox: {
	      boxStyle: {
	        background: "none",
	        opacity: 1,
	        width: "355px"
	      },
	      pixelOffset: new google.maps.Size(-17, -77),
	      closeBoxMargin: "7px 7px 2px 2px",
	      closeBoxURL: "",
	      infoBoxClearance: new google.maps.Size(1, 1),
	      visible: true,
	      pane: "floatPane",
	      enableEventPropagation: false
	    }
	  });
	  var Infobox =  new infoboxBuilder(options.infobox);
	  Infobox.setContent(content);
	  return Infobox;
	};


	/**
	 * Creates a infobox window for google maps
	 *
	 * @param {string} content
	 * @param {Object} options
	 * @param {string} options.theme - "dark" or "white"
	 * @param {Object} options.infobox
	 * @returns {InfoBox} Infobox object
	 */

	exports.create = function (content, options) {
	  var Infobox = createStandalone(content, options);
	  Infobox.setContent(generateContent(content, options.theme));
	  return Infobox;
	};

	exports.createStandalone = createStandalone;

	exports.setContent = function (Infobox, content, theme) {
	  Infobox.setContent(generateContent(content, theme));
	};

	function generateContent(content, theme) {
	  return "<div class='map__infobox map__infobox--" + theme + "'>" + content + "</div>";
	}


/***/ },
/* 42 */,
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/**
	 *
	 * @param {Map} map
	 * @param {LatLng} latlng
	 * @param {string} title
	 * @returns {Marker}
	 */
	var config = __webpack_require__(2);
	var _ = __webpack_require__(4);

	var wpconfig = __webpack_require__(3);

	exports.create = function (map, latlng, title) {
	  return exports.createAdvanced({
	    position: latlng,
	    map: map,
	    title: title
	  });
	};

	exports.createAdvanced = function (options) {
	  var positionX = wpconfig.var.isRtl ? -300 : 15;
	  options = _.defaults(options, {
	    animation: google.maps.Animation.DROP,
	    icon: {
	      url: config.assetsPathPrefix + 'img/marker/' + config.colorTheme + '.png',
	      origin: new google.maps.Point(0, 0),
	      anchor: new google.maps.Point(positionX, 47)
	    }
	  });
	  return new google.maps.Marker(options);
	};


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * Add support for chosen forms to listen to react
	 * to `reset` event
	 ==============================================================*/
	module.exports = function ($container) {
	  var ui = __webpack_require__(45);
	  ui.dropdownTree($container.find('.js-dtree'));
	  $container.find('.js-in-select').select2();
	  $container.find("button[type='reset']").on('click', function (e) {
	    e.preventDefault();

	    var form = $(this).closest('form').get(0);
	    form.reset();

	    $(form).find('select').each(function (i, v) {
	      $(v).trigger('change');
	    });
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * Module for rendering the dropdown tree in the filter block
	 ==============================================================*/
	exports.dropdownTree = function ($container) {
	  var $openBtn = $container.find('.js-dtree-btn');
	  var $acceptBtn = $container.find('.js-dtree-btn-accept');
	  var $resetBtn = $container.find('.js-dtree-btn-reset');
	  var $list = $container.find('.js-dtree-list');
	  var $form = $container.closest('form');
	  var placeholder = $openBtn.text();
	  var isOpen = false;

	  var closeOutside = __webpack_require__(7).closeOutside;

	  var toggleDropdownState = function () {
	    $container.toggleClass('open');
	    isOpen = !isOpen;
	  };

	  var updateSelectedString = function () {
	    var location = [];
	    $list.find(':checked').each(function () {
	      var name = $(this).next('label').text();
	      location.push(name);
	    });
	    if (!location.length) {
	      $openBtn.html(placeholder);
	    } else {
	      $openBtn.html(location.join(', '));
	    }
	  };

	  var reset = function () {
	    $list.find('input[type=checkbox]').prop({
	      checked: false,
	      indeterminate: false
	    });
	    updateSelectedString();
	  };

	  closeOutside($container, function () {
	    if (isOpen) {
	      toggleDropdownState();
	    }
	  });

	  $list.bonsai();
	  $list.qubit();

	  $list.on('change', '.in-checkbox', function () {
	    updateSelectedString();
	  });

	  $openBtn.add($acceptBtn).on('click', function () {
	    toggleDropdownState();
	  });

	  $resetBtn.on('click', function () {
	    reset();
	  });

	  if ($form.length) {
	    $form.on('reset', function () {
	      reset();
	    });
	  }
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var fieldInitializer = __webpack_require__(6);
	var forEach = __webpack_require__(4).forEach;
	module.exports = function (instanceId, options) {
	  forEach(options.fields, function (fieldOptions, fieldName) {
	    fieldInitializer.init(fieldName, fieldOptions);
	  });
	};

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var ajaxForm = __webpack_require__(48).form;
	module.exports = function (instanceId, options) {
	  var $container = $('#' + instanceId);
	  var $workerContactShow = $container.find('.js-worker-contact-show'),
	    $workerContactHide = $container.find('.js-worker-contact-hide');


	  $workerContactShow.on('click', function () {
	    $container.addClass('opened');
	  });
	  $workerContactHide.on('click', function () {
	    $container.removeClass('opened');
	  });
	  ajaxForm($container.find('.js-contact-form'), {action: instanceId});

	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var _ = __webpack_require__(4);
	var notifier = __webpack_require__(19);
	__webpack_require__(34);
	var utils = __webpack_require__(7);
	var wpconfig = __webpack_require__(3);
	var $ = __webpack_require__(1);
	var ajaxUrl = function (url, payload) {
	  payload = payload || {};
	  return $
	    .getJSON(url, payload);
	  // .done(function (data) {
	  //   if (data.result.message) {
	  //     // notifier.showSuccess(data.result.message);
	  //   }
	  // })
	  // .fail(function (jqXHR, textStatus, errorThrown) {
	  //   if (jqXHR.responseJSON && jqXHR.status < 500) {
	  //     // notifier.showError(jqXHR.responseJSON.error);
	  //   } else {
	  //     // notifier.showServerError();
	  //   }
	  // })
	};

	var ajax = function (action, payload) {
	  payload = payload || {};
	  payload.action = action;
	  return ajaxUrl(wpconfig.var.ajaxUrl, payload);
	};


	exports.loadContent = function (url, params, $container) {

	  if (_.isString($container)) {
	    $container = $($container);
	  }

	  var allPromise = $.Deferred();
	  var ajaxPromise = ajaxUrl(url, params);

	  utils.setContainerProcessingState($container, ajaxPromise);
	  ajaxPromise.done(function (data) {
	    $container.html(data.result.html);
	    if (data.result.title !== undefined) {
	      var d = document.createElement('div');
	      d.innerHTML = data.result.title;
	      document.title = d.innerText;
	    }
	    allPromise.resolve();
	  });

	  return allPromise;
	};


	exports.sendFromForm = function (action, $form, formValidator) {
	  var promise = ajax(action, _.object(_.map($form.serializeArray(), _.values)));
	  utils.setFormProcessingState($form, promise);
	  return promise;
	};

	exports.form = function ($form, route, options) {
	  options = _.defaults(options || {}, {
	    useParsley: true
	  });

	  if (!_.isString(route)) {
	    route = wpconfig.var.ajaxUrl + '?' + $.param(route);
	  }

	  if (options.useParsley === true) {
	    $form.parsley();
	  }


	  $form.on('submit', function (event) {
	    var promise = $.ajax({
	      type: 'POST',
	      url: route,
	      data: $form.serialize()
	    });

	    if (options.callback){
	      promise.done(options.callback);
	    }
	    utils.setFormProcessingState($form, promise);
	    event.preventDefault(); // Prevent the form from submitting via the browser.
	  });

	};


	exports.getUrl = function (action, params) {
	  return app.ajaxurl + '?' + $.param(_.merge({action: action}, params));
	};

	exports.parseAjaxDataParams = function($element){
	  var postParams = $element.dataByPrefix('ajax');

	  if (!_.isEmpty(postParams)) {
	    postParams = _.mapKeys(postParams, function (value, key) {
	      return key.substr(4).toLocaleLowerCase();
	    });
	  }
	  return postParams;
	};

	exports.buildAjaxFromElement = function ($element, $container) {
	  var url;
	  var type = $element.prop('nodeName');

	  if (type === 'A'){
	    url = $element.prop('href');
	  } else {
	    url = $element.data('url');
	  }
	  
	  var method = 'GET';
	  var postParams = exports.parseAjaxDataParams($element);

	  if (!_.isEmpty(postParams)) {
	    method = 'POST';
	  }

	  var promise =  $.ajax(url, {
	    data: postParams,
	    dataType: 'json',
	    type: method
	  });

	  if ($container !== undefined){
	    utils.setContainerProcessingState($container, promise);
	  }

	  return promise;
	};



/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var gmap = __webpack_require__(50);
	var marker = __webpack_require__(43);
	var infoboxMarker = __webpack_require__(52);
	var _ = __webpack_require__(4);
	var dataApiHelper = __webpack_require__(53);

	function buildOptions($item) {
	  var options = dataApiHelper.getOptions($item,
	    [
	      'lat',
	      'long'
	    ],
	    [
	      'clat',
	      'clong',
	      'infoboxText'
	    ],
	    {
	      zoom: 15,
	      infoboxTemplate: '#tmpl-map-infobox',
	      infoboxClosed: false,
	      infoboxTheme: 'dark'
	  });

	  if (!options.clat){
	    options.clat = options.lat;
	  }

	  if (!options.clong){
	    options.clong = options.long;
	  } 
	  return options;
	}


	module.exports = function () {
	  $('.js-dapi-gmap').each(function () {
	    var $container = $(this);
	    var $mapCanvas = $container.find('[data-map-canvas]');
	    var options = buildOptions($container);
	    var latLng = new google.maps.LatLng(options.lat, options.long);
	    var centerLatLng = new google.maps.LatLng(options.clat, options.clong);
	    var gmapOptions = _.merge({}, gmap.getCommonOptions(), {
	      zoom: options.zoom,
	      center: centerLatLng
	    });

	    gmap.create(
	      $mapCanvas,
	      $container.find('[data-map-button]'),
	      function () {
	        var map = new google.maps.Map($mapCanvas[0], gmapOptions);
	        if (options.infoboxText) {
	          infoboxMarker.createSimple(
	            map,
	            latLng,
	            options.infoboxText,
	            _.template($(options.infoboxTemplate).html()),
	            {
	              opened: !options.infoboxClosed,
	              theme: options.infoboxTheme
	            }
	          );
	        } else {
	          marker.create(map, latLng);
	        }
	      }
	    );
	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	exports.create = function ($mapContainer, $mobilePopupTrigger, onLoad) {
	  var mobilePopup = __webpack_require__(51);
	  var gridSize = __webpack_require__(29);
	  var _ = __webpack_require__(4);

	  onLoad = onLoad || $.noop;

	  if ($mobilePopupTrigger) {
	    mobilePopup.wrapContainer($mapContainer, $mobilePopupTrigger, loadMap);
	  } else {
	    loadMap();
	  }

	  function loadMap() {
	    onLoad();
	  }

	  var initLgMap = _.debounce(function () {
	    if (gridSize.get() !== 'xs') {
	      $('.map__wrap').append($($mapContainer[0]).detach().css({
	        width: '100%',
	        height: 'auto'
	      }));

	      google.maps.event.trigger($mapContainer[0], 'resize');
	    }
	  }, 500);

	  $(window).resize(initLgMap);
	};

	exports.getCommonOptions = function () {
	  /**
	   * See more options
	   * https://developers.google.com/maps/documentation/javascript/reference#MapOptions
	   */
	  return {
	    zoom: 10,
	    center: new google.maps.LatLng(34.020794936018724, -118.18954467773438),
	    // Disable scrolling wheel for usability purposes
	    scrollwheel: false,
	    zoomControl: true,
	    mapTypeControl: true,
	    mapTypeControlOptions: {
	      position: google.maps.ControlPosition.RIGHT_TOP
	    },
	    zoomControlOptions: {
	      position: google.maps.ControlPosition.RIGHT_CENTER
	    },
	    scaleControl: true,
	    scaleControlOptions: {
	      position: google.maps.ControlPosition.RIGHT_TOP
	    },
	    panControl: true,
	    panControlOptions: {
	      position: google.maps.ControlPosition.RIGHT_TOP
	    }
	  };
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * Helper for improved user experience with maps on devices
	 * with small screen.
	 *
	 * So that, when user loads the map on small-screen device, it
	 * is replaced by a button, clicking on it will open full screen
	 * popup with the map in it.
	 *
	 ==============================================================*/
	/**
	 * @param $mapContainer
	 * @param $triggerButton
	 * @param loadCallback
	 */
	exports.wrapContainer = function ($mapContainer, $triggerButton, loadCallback) {
	  var gridSize = __webpack_require__(29);
	  var $body = $('body');


	  $triggerButton.on('click', function () {
	    if (gridSize.get() == 'xs') {
	      $.colorbox({
	        html: $mapContainer,
	        onLoad: function () {
	          var winWidth = $(window).width();
	          var winHeight = window.innerHeight;
	          $mapContainer.css({
	            width: winWidth,
	            height: winHeight
	          });
	        },
	        onComplete: function () {
	          loadCallback();
	          $body.css({overflow: 'hidden'});
	        },
	        onCleanup: function () {
	          $body.css({overflow: 'auto'});
	        }
	      });
	    }
	  });

	  loadCallback();

	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function HashTable() {
	  var keys = [], values = [];

	  return {
	    put: function (key, value) {
	      var index = keys.indexOf(key);
	      if (index == -1) {
	        keys.push(key);
	        values.push(value);
	      }
	      else {
	        values[index] = value;
	      }
	    },
	    get: function (key) {
	      return values[keys.indexOf(key)];
	    }
	  };
	}

	var infoboxInstances = new HashTable();
	var markers = new HashTable();
	var _ = __webpack_require__(4);

	exports.create = function (map, latlng, title, infoboxHtml, infoboxTheme) {
	  var Infobox;
	  var config = __webpack_require__(2);
	  var infoboxBuilder = __webpack_require__(41);
	  var markerBuilder = __webpack_require__(43);

	  var marker = markerBuilder.create(map, latlng, title);
	  markers.put(marker, {content: infoboxHtml, theme: infoboxTheme});

	  Infobox = infoboxInstances.get(map);
	  if (!Infobox) {
	    Infobox = infoboxBuilder.create(infoboxHtml, {
	      theme: infoboxTheme
	    });
	    infoboxInstances.put(map, Infobox);
	  }

	  google.maps.event.addListener(marker, 'click', function () {
	    var infoboxData = markers.get(marker);
	    Infobox.close();
	    infoboxBuilder.setContent(Infobox, infoboxData.content, infoboxData.theme);
	    Infobox.open(map, marker);
	    Infobox.setVisible(true);
	  });

	  google.maps.event.addListener(map, 'click', function () {
	    if (Infobox) {
	      Infobox.setVisible(false);
	    }
	  });

	  return marker;
	};

	exports.createSimple = function (map, latlng, content, template, options) {
	  var Infobox;
	  var config = __webpack_require__(2);
	  var infoboxBuilder = __webpack_require__(41);
	  var markerBuilder = __webpack_require__(43);
	  var marker = markerBuilder.create(map, latlng, content);
	  var html = template({content: content});
	  options = _.defaults(options || {}, {
	    theme: 'dark',
	    opened: true
	  });


	  Infobox = infoboxBuilder.create(html, {
	    theme: options.theme,
	    infobox: {
	      visible: false
	    }
	  });

	  Infobox.open(map, marker);
	  if (options.opened === true){
	    google.maps.event.addListener(marker, 'animation_changed', function () {
	      Infobox.setVisible(true);
	    });
	  } else {
	    google.maps.event.addListener(marker, 'click', function () {
	        Infobox.setVisible(!Infobox.getVisible());
	    });
	  }
	  return marker;
	};
	var getInfoboxInstance = function (map) {
	  var Infobox;
	  var infoboxBuilder = __webpack_require__(41);
	  Infobox = infoboxInstances.get(map);
	  if (!Infobox) {
	    Infobox = infoboxBuilder.createStandalone('');
	    infoboxInstances.put(map, Infobox);
	  }
	  return Infobox;
	};
	exports.createStandalone = function (map, latlng, title, data, template) {

	  var config = __webpack_require__(2);

	  var markerBuilder = __webpack_require__(43);

	  var marker = markerBuilder.create(map, latlng, title);
	  var Infobox = getInfoboxInstance(map);

	  markers.put(marker, {data: data, template: template});

	  google.maps.event.addListener(marker, 'click', function () {
	    var infoboxData = markers.get(marker);
	    Infobox.close();
	    Infobox.setContent(infoboxData.template(infoboxData.data));
	    Infobox.open(map, marker);
	    Infobox.setVisible(true);
	  });

	  google.maps.event.addListener(map, 'click', function () {
	    if (Infobox) {
	      Infobox.setVisible(false);
	    }
	  });

	  return marker;
	};



/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(4);
	var errorHandler = __webpack_require__(54);

	/**
	 * @param {jQuery} $element
	 * @param {Array} requiredParams
	 * @param {Array} optionalParams
	 * @param {Object} optionalParamsWithDefaults
	 * @return {Object}
	 */
	exports.getOptions = function ($element, requiredParams, optionalParams, optionalParamsWithDefaults) {
	  requiredParams = requiredParams || [];
	  optionalParams = optionalParams || [];
	  optionalParamsWithDefaults = optionalParamsWithDefaults || {};

	  var dataValues = $element.data();
	  var optionWhitelist = _.union(
	    requiredParams,
	    optionalParams,
	    _.keys(optionalParamsWithDefaults)
	  );

	  dataValues = _.pick(dataValues, optionWhitelist);
	  dataValues = _.omit(dataValues, function (value) {
	    return value === "";
	  });

	  _.each(requiredParams, function (value) {
	    if (!dataValues.hasOwnProperty(value)) {
	      errorHandler.log('The object does not have the required "' + value + '" value');
	    }
	  });

	  return _.defaultsDeep(dataValues, optionalParamsWithDefaults);
	};

/***/ },
/* 54 */
/***/ function(module, exports) {

	exports.log = function (message) {
	  if (window.console && window.console.error){
	    window.console.error(message);
	  }
	};

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var mapAutocomplete = __webpack_require__(56);
	var createMap = __webpack_require__(50);
	var _ = __webpack_require__(4);
	var dataApiHelper = __webpack_require__(53);

	function buildOptions($item) {
	  var options = dataApiHelper.getOptions($item,
	    [
	      'clat',
	      'clong'
	    ],
	    [
	      'zoom',
	      'autocompleteCountry'
	    ],
	    {});

	  var mapOptions = {};
	  var autocompleteOptions = {};

	  mapOptions.center = new google.maps.LatLng(options.clat, options.clong);

	  if (options.zoom) {
	    mapOptions.zoom = options.zoom;
	  }

	  if (options.autocompleteCountry) {
	    autocompleteOptions.componentRestrictions = {'country': options.autocompleteCountry};
	  }

	  return {
	    map: mapOptions,
	    autocomplete: autocompleteOptions
	  };
	}


	module.exports = function () {
	  $('.js-dapi-loc-gmap').each(function () {
	    var $container = $(this);
	    var $mapCanvas = $container.find('[data-map-canvas]');
	    var options = buildOptions($container);

	    if (options)
	      createMap.create(
	        $mapCanvas,
	        $container.find('[data-map-button]'),
	        function () {
	          mapAutocomplete($container, options);
	        }
	      );

	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(jQuery, $) {"use strict";
	/***************************************************************
	 * Helper for displaying the interactive map and interaction
	 * with form field in my_listings_add_edit.html
	 ==============================================================*/
	module.exports = function ($container, options) {
	  var _ = __webpack_require__(4),
	    geolocation = __webpack_require__(57)
	    ;

	  options = _.defaults(options, {
	    elementSelectors: {
	      mapContainer: '[data-map]',
	      addressInput: '[data-address]',
	      latitudeInput: '[data-latitude]',
	      longitudeInput: '[data-longitude]',
	      triggerButton: '.js-map-btn'
	    },
	    map: {
	      zoom: 10,
	      mapTypeControl: false,
	      panControl: false,
	      zoomControl: false,
	      streetViewControl: false
	    },
	    autocomplete: {
	      componentRestrictions: {'country': 'us'}
	    }
	  });

	  if (!($container instanceof jQuery)) {
	    $container = $($container);
	  }

	  var $mapContainer = $container.find('.js-map-canvas');

	  var map, marker,
	    geocoder,
	    autocompleteAddress = $container.find(options.elementSelectors.addressInput)[0],
	    autocompleteLat = $container.find(options.elementSelectors.latitudeInput)[0],
	    autocompleteLng = $container.find(options.elementSelectors.longitudeInput)[0]
	    ;
	  geocoder = new google.maps.Geocoder();

	  function mapInit() {
	    var map = new google.maps.Map($mapContainer[0], options.map);
	    google.maps.event.addListener(map, 'click', function (event) {
	      placeMarker(event.latLng);
	    });

	    geolocation.activate(map, {
	      buttonTrigger: $container.find('.js-geolocate'),
	      onSuccess: function (latLng) {
	        placeMarker(latLng);
	      }
	    });

	    function placeMarker(location) {
	      if (marker) {
	        marker.setPosition(location); //on change sa position
	      } else {
	        addMapMarker(location.lat(), location.lng())
	      }
	      setCoordinatesFiled(location.lat(), location.lng());
	      getAddress(location);
	    }

	    function getAddress(latLng) {
	      geocoder.geocode({'latLng': latLng},
	        function (results, status) {
	          if (status == google.maps.GeocoderStatus.OK) {
	            if (results[0]) {
	              autocompleteAddress.value = results[0].formatted_address;
	            }
	            else {
	              autocompleteAddress.value = "No results";
	            }
	          }
	          else {
	            autocompleteAddress.value = status;
	          }
	        });
	    }

	    // Create the autocomplete object and associate it with the UI input control.
	    // Restrict the search to the default country, and to place type "cities".
	    var autocomplete = new google.maps.places.Autocomplete(
	      /** @type {HTMLInputElement} */( autocompleteAddress ),
	      options.autocomplete);

	    google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);

	    $(autocompleteAddress).on('keypress', function (e) {
	      if (e.keyCode == 13) return false;
	    });


	    // When the user selects a city, get the place details for the city and
	    // zoom the map in on the city.
	    function onPlaceChanged() {
	      var place = autocomplete.getPlace();
	      if (place.geometry) {
	        map.panTo(place.geometry.location);
	        // change zoom map only if user did not change it before
	        map.setZoom(15);
	        if (marker) {
	          var markerCoords = new google.maps.LatLng(place.geometry.location.A, place.geometry.location.F);
	          marker.setPosition(markerCoords); //on change sa position
	        } else {
	          addMapMarker(place.geometry.location.A, place.geometry.location.F)
	        }
	        setCoordinatesFiled(place.geometry.location.A, place.geometry.location.F);
	      } else {
	        autocomplete.placeholder = 'Enter a address';
	      }

	    }

	    // create marker on map
	    function addMapMarker(lat, lng) {
	      var markerCoords = new google.maps.LatLng(lat, lng);
	      var markerBuilder = __webpack_require__(43);

	      marker = markerBuilder.createAdvanced({
	        position: markerCoords,
	        map: map,
	        draggable: true
	      });

	      google.maps.event.addListener(marker, 'dragend', function () {
	        placeMarker(marker.getPosition());
	      });
	    }


	    function triggerInputCoordinateChange() {
	      var latlng = new google.maps.LatLng(autocompleteLat.value, autocompleteLng.value);
	      if (marker) {
	        marker.setPosition(latlng); //on change sa position
	      } else {
	        addMapMarker(latlng.lat(), latlng.lng())
	      }
	      map.panTo(latlng);
	      getAddress(latlng);
	    }


	    // set coordinates in fileds
	    function setCoordinatesFiled(lat, lng) {
	      autocompleteLat.value = lat;
	      autocompleteLng.value = lng;
	    }

	    $(autocompleteLat, autocompleteLng).on('input', function (e) {
	      if ($.isNumeric(autocompleteLat.value) && $.isNumeric(autocompleteLng.value)) {
	        triggerInputCoordinateChange();
	        if (e.keyCode == 13) return false;
	      }
	    });

	    if ($.isNumeric(autocompleteLat.value) && $.isNumeric(autocompleteLng.value)) {
	      triggerInputCoordinateChange();
	    }
	  }
	  mapInit();

	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(1)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/**
	 * @param {Map} map Google Map Object
	 * @param {Object} options
	 * @param {String} options.buttonTrigger
	 * @param {Function} options.onSuccess
	 */
	module.exports.activate = function (map, options) {
	  var notifier = __webpack_require__(19);
	  var _ = __webpack_require__(4);
	  options = _.defaults(options, {
	    buttonTrigger: false,
	    onSuccess: function () {
	    }
	  });

	  if (options.buttonTrigger) {
	    $(options.buttonTrigger).on('click', initialize);
	  } else {
	    google.maps.event.addDomListener(window, 'load', initialize);
	  }


	  function initialize() {
	    // Try HTML5 geolocation
	    if (navigator.geolocation) {
	      navigator.geolocation.getCurrentPosition(
	        function (position) {
	          var pos = new google.maps.LatLng(
	            position.coords.latitude,
	            position.coords.longitude
	          );
	          map.setCenter(pos);
	          options.onSuccess(pos);
	        }, function () {
	          handleNoGeolocation(true);
	        }
	      );
	    } else {
	      // Browser doesn't support Geolocation
	      handleNoGeolocation(false);
	    }
	  }

	  function handleNoGeolocation(errorFlag) {
	    if (errorFlag) {
	      notifier.showError('Error: The Geolocation service failed.');
	    } else {
	      notifier.showError('Error: Your browser doesn\'t support geolocation.');
	    }
	  }

	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var _ = __webpack_require__(4);
	var formTemplate = __webpack_require__(7).formTemplate;

	module.exports = function () {
	  $('.js-dapi-dynarow').each(function () {
	    var $container = $(this);
	    var template = formTemplate($container.data('prototype'));
	    var nextIndex = $container.children().length;
	    $container.on('click', '[data-add-row],[data-remove-row]', function (event) {
	      var $btn = $(this);
	      var $row = $btn.closest('[data-row]');

	      if ($btn.data('addRow') !== undefined) {

	        $container.append(template({'name': nextIndex}));
	        $row.find('[data-add-row]').addClass('hide');
	        nextIndex += 1;

	      } else {

	        var $lastRow = $container.children().last();
	        $row.remove();

	        if ($lastRow.is($row)) {
	          $lastRow = $container.children().last();

	          if ($lastRow.length) {
	            $lastRow.find('[data-add-row]').removeClass('hide');
	          } else {
	            $container.append(template({'name': nextIndex}));
	            nextIndex += 1;
	          }
	        }
	      }
	    });
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var _ = __webpack_require__(4);
	var dataApiHelper = __webpack_require__(53);
	__webpack_require__(37);
	var wpconfig = __webpack_require__(3);

	function buildOptions($item) {
	  var options = dataApiHelper.getOptions($item,
	    [
	    
	    ],
	    [
	     
	    ],
	    {
	    
	  }
	  );

	  return options;
	}


	module.exports = function () {
	  $('.js-dapi-slickslider').each(function () {
	    var $container = $(this);
	    var options = buildOptions($container);

	    var $currentCounter = $container.find('[data-current]');
	    var $totalCounter = $container.find('[data-total]');
	    var $slickContainer = $container.find('[data-slick]');
	    var $prevArrow = $container.find('[data-prev]');
	    var $nextArrow = $container.find('[data-next]');

	    $slickContainer
	      .on('init', function (event, slick) {
	        $totalCounter.html(slick.slideCount);
	      })
	      .slick({
	        dots: false,
	        infinite: true,
	        speed: 300,
	        slidesToShow: 1,
	        centerMode: false,
	        prevArrow: $prevArrow,
	        nextArrow: $nextArrow,
	        rtl: wpconfig.var.isRtl,
	      })
	      .on('afterChange', function (event, slick, currentSlide) {
	        $currentCounter.html(currentSlide + 1);
	      });

	    var $sliderNavContainer = $container.siblings('.js-nav-slickslider');
	    if ($sliderNavContainer.length) {
	      var $sliderNavSlick = $sliderNavContainer.find('[data-slick]');
	      $sliderNavSlick
	        .slick({
	          slidesToShow: 5,
	          slidesToScroll: 1,
	          focusOnSelect: true,
	          arrows: true,
	          accessibility: false,
	          centerMode: true,
	          centerPadding: 0,
	          prevArrow: $sliderNavContainer.find('[data-prev]'),
	          nextArrow: $sliderNavContainer.find('[data-next]'),
	          rtl: wpconfig.var.isRtl,
	          responsive: [
	            {
	              breakpoint: 768,
	              settings: {
	                slidesToShow: 3
	              }
	            }
	          ]
	        });
	      var slideRel;
	      // On before slide change
	      $sliderNavSlick
	        .on('afterChange', function(event, slick, currentSlide, nextSlide){
	          slideRel = $sliderNavSlick.find('.slick-current').data('slide-rel');
	          $slickContainer.slick('slickGoTo', slideRel, false);
	        })
	        .on('click', '.slider__item', function () {
	          var item = $(this);
	          slideRel = $(item).data('slide-rel');
	          $slickContainer.slick('slickGoTo', slideRel, false);
	        });
	    }

	  });
	};


	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {/*** IMPORTS FROM imports-loader ***/
	(function() {

	var _ = __webpack_require__(4);
	var dataApiHelper = __webpack_require__(53);
	__webpack_require__(61);

	function buildOptions($item) {
	  var options = dataApiHelper.getOptions($item,
	    [
	    
	    ],
	    [
	     
	    ],
	    {
	    
	  }
	  );

	  return options;
	}


	module.exports = function () {
	  $('.player').each(function () {
	    /***************************************************************
	     * Plyr initialization for displaying html5 video
	     * If you don't plan to have html5 video on the website,
	     * you can remove this
	     * Documentation https://github.com/selz/plyr
	     ==============================================================*/
	    var $player = $(this);
	    if (!$player.length) return;
	    plyr.setup();
	  });
	};


	}.call(window));
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(62);

/***/ },
/* 62 */,
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var _ = __webpack_require__(4);
	var photoSwipe = __webpack_require__(64);

	module.exports = function (isWordpress) {
	  isWordpress = isWordpress || false;
	  photoSwipe('.js-dapi-gallery', {
	    hideWordpressBar: isWordpress
	  });
	};

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var _ = __webpack_require__(4);
	var PhotoSwipe = __webpack_require__(65);
	var PhotoSwipeUI_Default = __webpack_require__(66);
	var pspwHTML = __webpack_require__(67);
	var pspwInserted = false;
	var pspwElement;
	function getPspw() {
	  if (pspwInserted === false) {
	    pspwElement = $(pspwHTML).appendTo('body')[0];
	  }
	  return pspwElement;
	}
	function parseThumbnailElements($gallery, itemSelector) {
	  var slides = [];
	  $gallery.find(itemSelector).each(function () {
	    var $item = $(this);
	    var size = $item.data('size');
	    var title = $item.data('caption');
	    var src = $item.data('src');
	    var slide;
	    size = size.split('x');
	    slide = {
	      src: src,
	      w: size[0],
	      h: size[1],
	      el: $item
	    };
	    if (title === undefined) {
	      title = $item.find('[data-caption]');
	      if (title.length) {
	        slide.title = title.text();
	      }
	    }
	    slides.push(slide);
	  });
	  return slides;
	}
	function parseHash() {
	  var hash = window.location.hash.substring(1),
	    params = {};
	  if (hash.length < 5) {
	    return params;
	  }
	  var vars = hash.split('&');
	  for (var i = 0; i < vars.length; i++) {
	    if (!vars[i]) {
	      continue;
	    }
	    var pair = vars[i].split('=');
	    if (pair.length < 2) {
	      continue;
	    }
	    params[pair[0]] = pair[1];
	  }
	  if (params.gid) {
	    params.gid = parseInt(params.gid, 10);
	  }
	  return params;
	}
	/**
	 *
	 * @param {PhotoSwipe} gallery
	 */
	function hideWordpressBar(gallery) {
	  var $wpAdminBar = $('#wpadminbar');
	  $wpAdminBar.hide();
	  gallery.listen('close', function () {
	    $wpAdminBar.show();
	  });
	}
	function open(index, $gallery, disableAnimation, fromURL, options) {
	  var gallery,
	    photoSwipeOptions,
	    items;
	  items = parseThumbnailElements($gallery, options.itemSelector);
	  // define options (if needed)
	  photoSwipeOptions = {
	    // define gallery index (for URL)
	    galleryUID: $gallery.data('pspwUid'),
	    getThumbBoundsFn: function (index) {
	      var thumbnail = $gallery.find('[data-thumbnail]')[index],
	        pageYScroll = window.pageYOffset || document.documentElement.scrollTop;
	      if (!thumbnail) thumbnail = $gallery.find('[data-wrapper]')[0];
	      var rect = thumbnail.getBoundingClientRect();

	      return {x: rect.left, y: rect.top + pageYScroll, w: rect.width};
	    }
	  };
	  _.merge(photoSwipeOptions, options.photoswipe);
	  if (fromURL) {
	    photoSwipeOptions.index = parseInt(index, 10) - 1;
	  } else {
	    photoSwipeOptions.index = parseInt(index, 10);
	  }
	  if (disableAnimation) {
	    photoSwipeOptions.showAnimationDuration = 0;
	  }
	  gallery = new PhotoSwipe(getPspw(), PhotoSwipeUI_Default, items, photoSwipeOptions);
	  gallery.init();
	  if (options.hideWordpressBar === true) {
	    hideWordpressBar(gallery);
	  }
	}
	/**
	 *
	 * @param gallerySelector
	 * @param options
	 * @param {bool} options.hideWordpressBar
	 * @param {string} options.itemSelector
	 * @param {string} options.triggerSelector
	 */
	module.exports = function (gallerySelector, options) {
	  options = options || {};
	  _.defaultsDeep(options, {
	    itemSelector: '[data-item]',
	    triggerSelector: '[data-trigger]',
	    hideWordpressBar: true,
	    photoswipe: {}
	  });
	  var $galleryElements = $(gallerySelector);

	  $galleryElements.each(function (index) {
	    var $gallery = $(this);
	    $gallery
	      .data('pspwUid', index + 1)
	      .on('click', options.triggerSelector, function (e) {
	        e.preventDefault();
	        open($(this).closest(options.triggerSelector).data('index'), $gallery, false, false, options)
	      });
	  });
	  if ($galleryElements.length) {
	    var hashData = parseHash();
	    if (hashData.pid && hashData.gid) {
	      open(hashData.pid, $galleryElements.eq(hashData.gid - 1), true, true, options);
	    }
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 65 */,
/* 66 */,
/* 67 */
/***/ function(module, exports) {

	module.exports = "<div class=\"pswp js-pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n\n    <!-- Background of PhotoSwipe.\n         It's a separate element as animating opacity is faster than rgba(). -->\n    <div class=\"pswp__bg\"></div>\n\n    <!-- Slides wrapper with overflow:hidden. -->\n    <div class=\"pswp__scroll-wrap\">\n\n        <!-- Container that holds slides.\n            PhotoSwipe keeps only 3 of them in the DOM to save memory.\n            Don't modify these 3 pswp__item elements, data is added later on. -->\n        <div class=\"pswp__container\">\n            <div class=\"pswp__item\"></div>\n            <div class=\"pswp__item\"></div>\n            <div class=\"pswp__item\"></div>\n        </div>\n\n        <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n        <div class=\"pswp__ui pswp__ui--hidden\">\n\n            <div class=\"pswp__top-bar\">\n\n                <!--  Controls are self-explanatory. Order can be changed. -->\n\n                <div class=\"pswp__counter\"></div>\n\n                <button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\n\n                <button class=\"pswp__button pswp__button--share\" title=\"Share\"></button>\n\n                <button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\n\n                <button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\n\n                <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n                <!-- element will get class pswp__preloader--active when preloader is running -->\n                <div class=\"pswp__preloader\">\n                    <div class=\"pswp__preloader__icn\">\n                        <div class=\"pswp__preloader__cut\">\n                            <div class=\"pswp__preloader__donut\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n                <div class=\"pswp__share-tooltip\"></div>\n            </div>\n\n            <button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\">\n            </button>\n\n            <button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\">\n            </button>\n\n            <div class=\"pswp__caption\">\n                <div class=\"pswp__caption__center\"></div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>";

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var _ = __webpack_require__(4);
	var dataApiHelper = __webpack_require__(53);
	__webpack_require__(69);

	function buildOptions($item) {
	  return dataApiHelper.getOptions($item,
	    [
	      'target'
	    ],
	    [],
	    {
	      scrolltop: true
	    });
	}


	module.exports = function (loader) {
	  if (!!(window.history && window.history.pushState) !== true) {
	    return;
	  }

	  var bind = function ($container, options) {
	    $container.on('click', 'a', function () {
	      var url = this.getAttribute('href');
	      loadUrl(url, options);
	      return false;
	    });
	  };

	  var saveState = function (url) {
	    history.pushState({pagination: url}, document.title, url);
	  };

	  var loadUrl = function (url, options) {
	    var promise = loader(url, {}, options.target).done(function () {
	      var $target = $(options.target);
	      $target.find(selector).each(function () {
	        bind($(this), options);
	      });
	      saveState(url);
	    });
	    if (options.scrolltop === true) {
	      promise.done(function () {
	        $(window).scrollTo(options.target, 300);
	      });
	    }
	  };

	  var selector = '.js-dapi-pagination';

	  $(selector).each(function () {
	    saveState(document.location.href);

	    var $container = $(this);
	    var options = buildOptions($container);
	    bind($container, options);
	    window.onpopstate = function (event) {
	      if (event.state !== null){
	        loadUrl(event.state.pagination, options);
	      }
	    };
	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 69 */,
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var _ = __webpack_require__(4);

	module.exports = function (templates) {
	  _.forEach(templates, function (id, key) {
	    templates[key] = _.template($('#'+id).html());
	  });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var utils = __webpack_require__(7);
	var _ = __webpack_require__(4);
	var errorHandler = __webpack_require__(54);

	var initializer = {
	  hero: __webpack_require__(72),
	  testimonials: __webpack_require__(78),
	  partners: __webpack_require__(79),
	  propslider: __webpack_require__(80),
	  propmap: __webpack_require__(75),
	  panoramaMapSwitcher: __webpack_require__(81),
	  propertyAreaSwitcher: __webpack_require__(82),
	  propertyGroup: __webpack_require__(83)
	};

	var partialRefreshes = {};

	module.exports = function (modules) {
	  _.each(modules, function (module_instances) {
	    _.each(module_instances, function (module) {
	      if (initializer[module.name]) {
	        initializer[module.name](module);
	        if (module.hasOwnProperty('selectiveRefreshId') && module.selectiveRefreshId !== false) {
	          if (wp && wp.customize && wp.customize.selectiveRefresh) {
	            wp.customize.selectiveRefresh.bind('partial-content-rendered', function (response) {
	              if (response.partial.id === module.selectiveRefreshId) {
	                initializer[module.name](module);
	              }
	            });
	          }
	        }
	      } else {
	        // errorHandler.log('Undefined module ' + module.name);
	      }
	    });
	  })
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var banner = __webpack_require__(73);
	var propmap = __webpack_require__(75);

	module.exports = function (module) {
	  banner($('#' + module.container));
	  if (module.mapEnabled) {
	    propmap(module);
	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	module.exports = function ($container) {
	  var Vivus = __webpack_require__(74);
	  /***************************************************************
	   * Initialize banner animation
	   * Just add class start animation on document ready
	   ==============================================================*/

	  $container.addClass('banner--play');

	  /***************************************************************
	   * Initialize line animation
	   * See https://github.com/maxwellito/vivus for more options
	   ==============================================================*/
	  new Vivus($container.find('.js-banner-line')[0], {type: 'async', duration: 50}, function () {
	    $container.find('.js-arrow-end').css({opacity: 1});
	    $container.find('.js-search-form').addClass('form--anim');
	  });
	};


/***/ },
/* 74 */,
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var createMap = __webpack_require__(50);
	var createGmapClustering = __webpack_require__(76).create;
	var infoboxMarker = __webpack_require__(52);
	var wpconfig = __webpack_require__(3);
	var utils = __webpack_require__(7);
	var _ = __webpack_require__(4);
	var enableFullscreen = __webpack_require__(77);
	var notifier = __webpack_require__(19);
	var gridSize = __webpack_require__(29);


	module.exports = function (module) {
	  var $sectionContainer = $('#' + module.container);
	  var propertyDataRoute = wpconfig.route.propertyMapSearch;
	  var $form = $sectionContainer.find('form');
	  var $mapCanvas = $sectionContainer.find('.js-map-index-canvas');
	  var template = wpconfig.template.propertyMapTooltip;


	  var markers = [];
	  var cluster = null;

	  var stateShowMap = 0;
	  var showMap = function () {
	    if (module.name == 'hero' && stateShowMap == 2) {
	      $sectionContainer.find('.map').addClass('opened');
	      stateShowMap = true;
	      $form.removeClass('form--light').addClass('form--white');
	      $('.header.header--overlay').removeClass('header--dark').addClass('header--white');
	      $('#header-nav').addClass('navbar--overlay-map');
	    }
	  };

	  var loadData = function (callback) {
	    var promise = $.ajax({
	      type: 'GET',
	      url: propertyDataRoute,
	      data: $form.serialize()
	    });

	    promise.done(function (response) {
	      callback(response.result);
	    });
	    showMap(++stateShowMap);
	    utils.setContainerProcessingState($sectionContainer, promise);
	  };

	  var clearMarkers = function () {
	    _.each(markers, function (marker) {
	      marker.setMap(null);
	    });
	    markers = [];
	  };

	  var setMarkers = function (map, results) {
	    clearMarkers();
	    if (cluster !== null) {
	      cluster.clearMarkers();
	    }

	    if (!results.length) {
	      notifier.showError('No results');
	      return;
	    }

	    var bounds = new google.maps.LatLngBounds();

	    _.each(results, function (item) {
	      var marker = infoboxMarker.createStandalone(
	        map,
	        new google.maps.LatLng(item.lat, item.lng),
	        item.address,
	        _.merge(item, {
	          theme: module.theme
	        }),
	        template
	      );
	      // Save the created marker for later use for clustering
	      bounds.extend(new google.maps.LatLng(item.lat, item.lng));
	      markers.push(marker);
	    });
	    cluster = createGmapClustering(map, markers);


	    map.fitBounds(bounds);
	  };

	  var initMap = function (results) {
	    requestAnimationFrame(function () {
	      createMap.create(
	        // Map container
	        $mapCanvas,

	        // A button, clicking on which will display the map in a fullscreen popup on small screens
	        $('.js-map-btn'),

	        /**
	         * This callback is executed when the Google Map is loaded
	         * As first agrument it receives the google map object
	         *
	         * Please place here all the code that needs the google map object
	         */
	        function () {
	          var map = new google.maps.Map($mapCanvas[0], _.merge(createMap.getCommonOptions(), {zoom: 7, maxZoom: 16}));
	          if (module.fullscreen) {
	            enableFullscreen($mapCanvas);
	          }
	          
	          setMarkers(map, results);

	          var debouncedLoader = _.debounce(function () {
	            if (gridSize.get() === 'xs') return;
	            loadData(function (results) {
	              setMarkers(map, results);
	            });
	          }, 700);

	          $form.find('input').on('input', function () {
	            debouncedLoader();
	          });

	          $form.find('select').on('change', function () {
	            debouncedLoader();
	          });

	          $form.on('change', 'input[type="hidden"], input[type="radio"], input[type="checkbox"]', function () {
	            debouncedLoader();
	          });

	        });
	    });
	  };

	  loadData(function (result) {
	    initMap(result);
	  });


	};



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/**
	 *
	 * @param {Map} map
	 * @param {Marker[]} markers - Array of markers
	 * @returns {Marker}
	 */
	exports.create = function (map, markers) {
	  var config = __webpack_require__(2);
	  var MarkerClusterer = __webpack_require__(40);
	  return new MarkerClusterer(map, markers, {
	    maxZoom: 11,
	    gridSize: 100,
	    styles: [{
	      url: config.assetsPathPrefix + 'img/marker/' + config.colorTheme + '.png',
	      width: 34,
	      height: 47,
	      anchorText: [-7, 18],
	      anchorIcon: [15, 47],
	      textColor: '#fff',
	      textSize: 10
	    }]
	  });
	};


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	/***************************************************************
	 * Fullscreen map, set height
	 ==============================================================*/
	module.exports = function ($mapCanvas) {
	  // var $mapCanvas = $('.js-map-canvas-fullscreen');
	  
	  if(!$mapCanvas.length) return;
	  
	  var winHeight = $(window).height(),
	    headerHeight = $('.header').height(),
	    headerNavHeight = $('#header-nav').height(),
	    map = $mapCanvas.closest('.js-map'),
	    mapHeight = map.height(),
	    diff;


	  var gridSize = __webpack_require__(29).get();
	  if (gridSize !== 'lg') return;

	  diff = winHeight - headerHeight - headerNavHeight;
	  if (mapHeight < diff) {
	    map.animate({height: diff}, 1000, function () {
	      if ($mapCanvas.length) {
	        google.maps.event.trigger($mapCanvas[0], 'resize');
	      }
	    });
	  }
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	__webpack_require__(37);
	var wpconfig = __webpack_require__(3);
	module.exports = function (module) {
	  /***************************************************************
	   * Initialize sliders on the frontpage
	   * See http://kenwheeler.github.io/slick/ for more options
	   ==============================================================*/
	  var $reviewSlider = $('#'+module.container);
	  if (!$reviewSlider.length) return; 
	  $reviewSlider
	    .find('.js-slick-slider')
	    .slick({
	      dots: true,
	      infinite: true,
	      speed: 800,
	      slidesToShow: 1,
	      autoplay: true,
	      autoplaySpeed: 5000,
	      rtl: wpconfig.var.isRtl
	    });
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	__webpack_require__(37);
	var wpconfig = __webpack_require__(3);
	module.exports = function (module) {
	  /**
	   * Slick slider for "Our partners" block
	   * See documentation for options http://kenwheeler.github.io/slick/
	   ==============================================================*/
	  var $partnersSlider = $('#'+module.container) ;
	  if (!$partnersSlider.length) return;

	  $partnersSlider
	    .find('.js-slick-slider')
	    .slick({
	      dots: false,
	      infinite: true,
	      speed: 300,
	      slidesToShow: 5,
	      autoplay: true,
	      rtl: wpconfig.var.isRtl,
	      prevArrow: $partnersSlider.find('.js-partners-prev'),
	      nextArrow: $partnersSlider.find('.js-partners-next'),
	      responsive: [
	        {
	          breakpoint: 1100,
	          settings: {
	            slidesToShow: 4
	          }
	        },
	        {
	          breakpoint: 1000,
	          settings: {
	            slidesToShow: 3
	          }
	        },
	        {
	          breakpoint: 768,
	          settings: {
	            slidesToShow: 1
	          }
	        }
	      ]
	    });
	};



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	__webpack_require__(37);
	var gridSize = __webpack_require__(29);

	var wpconfig = __webpack_require__(3);
	module.exports = function (module) {
	  /***************************************************************
	   * Initialize sliders on the frontpage
	   * See http://kenwheeler.github.io/slick/ for more options
	   ==============================================================*/
	  var $wideBanner = $('#'+module.container);
	  if (!$wideBanner.length) return;
	  var $wideBannerSlider = $wideBanner.find('.js-slick-slider');

	  $wideBannerSlider
	    .slick({
	      dots: false,
	      infinite: true,
	      speed: 300,
	      slidesToShow: 1,
	      lazyLoad: 'progressive',
	      prevArrow: $wideBanner.find('.js-banner-prev'),
	      nextArrow: $wideBanner.find('.js-banner-next'),
	      rtl: wpconfig.var.isRtl,
	      responsive: [
	        {
	          breakpoint: 1300,
	          settings: {
	            centerMode: false,
	            variableWidth: false,
	            arrows: true
	          }
	        }
	      ]
	    });
	  $wideBannerSlider.on('setPosition', function (event, slick) {
	    $wideBanner.addClass('slider--init');
	  });

	  // paralax effect for main slider
	  if(!module.parallax || gridSize.get() === 'xs') return;
	  $(window).on('scroll', function () {
	    if(window.detectIE || $('.slider--wide').length === 0 ) return;
	    var scrollAmount = $(window).scrollTop() / 2;
	    scrollAmount = Math.round(scrollAmount);

	    if(scrollAmount > 500) return;
	    $('.slider--wide .slider__block').css('transform', 'translateY(' + scrollAmount + 'px)');
	  })
	};



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var createMap = __webpack_require__(50);
	var marker = __webpack_require__(43);
	var utils = __webpack_require__(7);
	var gridSize = __webpack_require__(29);
	var _ = __webpack_require__(4);


	/**
	 * @param module Object
	 * @param module.showPanorama bool
	 * @param module.showMap bool
	 * @param module.mapType string
	 * @param module.mapZoom integer
	 * @param module.location Object
	 * @param module.location.lat string
	 * @param module.location.lng string
	 * @param module.location.address string
	 * @param module.infoboxTheme string
	 * @param module.infoboxTemplate string
	 *
	 */
	module.exports = function (module) {
	  var map,
	    coords,
	    $container, $mapBtn, $panoramaBtn,
	    active
	    ;
	  if (!module.showMap && !module.showPanorama) {
	    return false;
	  }

	  $container = $('#' + module.container);
	  var $mapCanvas = $($container.find('.js-map-canvas[data-type="map"]'));
	  var $panoramaCanvas = $container.find('.js-map-canvas[data-type="panorama"]');
	  $mapBtn = $container.find('.js-map-btn');
	  $panoramaBtn = $container.find('.js-panorama-btn');

	  active = $mapBtn.add($panoramaBtn).filter('.active');

	  coords = new google.maps.LatLng(module.location.lat, module.location.lng);
	  createMap.create(
	    $mapCanvas,
	    $mapBtn,
	    function () {
	      var map = new google.maps.Map($mapCanvas[0], _.merge(createMap.getCommonOptions(), {
	        center: coords,
	        zoom: parseInt(module.mapZoom, 10),
	        mapTypeId: module.mapType
	      }));
	      marker.create(map, coords, module.location.address);
	    }
	  );

	  /**
	   * This is a wrapper around original Google Maps Panorama object,
	   * which brings some user experience improvements for mobile users,
	   * So that, when user loads the panorama on small-screen device, it
	   * is replaced by a button, clicking on it will open full screen
	   * popup with the panorama in it.
	   *
	   * If you don't want/need that, you can call `google.maps.StreetViewPanorama` contructor directly
	   *
	   * See https://developers.google.com/maps/documentation/javascript/
	   * for more examples and options
	   */

	  createMap.create(
	    // Map container
	    $panoramaCanvas,

	    // A button, clicking on which will display the map in a fullscreen popup on small screens
	    $panoramaBtn,
	    function () {
	      var map = new google.maps.StreetViewPanorama($panoramaCanvas[0], {
	        position: coords,
	        pov: {
	          heading: 34,
	          pitch: 10
	        },
	        zoomControl: true,
	        zoomControlOptions: {
	          position: google.maps.ControlPosition.RIGHT_CENTER
	        },
	        panControl: true,
	        panControlOptions: {
	          position: google.maps.ControlPosition.RIGHT_TOP
	        }
	      });

	    }
	  );

	  function showMap() {
	    $panoramaCanvas.css({zIndex: 5});
	    $mapCanvas.css({zIndex: 10});

	  }

	  function showPanorama() {
	    $panoramaCanvas.css({zIndex: 10});
	    $mapCanvas.css({zIndex: 5});
	  }


	  active = $mapBtn.add($panoramaBtn).filter('.active');
	  var toggleActive = function (newActive) {
	    if (active) {
	      active.removeClass('active');
	    }
	    active = $(newActive);
	    active.addClass('active');
	  };

	  $mapBtn.on('click', function () {
	    if(gridSize.get() === 'xs') return;
	    toggleActive(this);
	    showMap();
	  });
	  $panoramaBtn.on('click', function () {
	    if(gridSize.get() === 'xs') return;
	    toggleActive(this);
	    showPanorama();
	  });

	  module.showMap ? showMap() : showPanorama();
	};



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var utils = __webpack_require__(7);
	/**
	 * @param module object
	 * @param module.url string
	 */
	module.exports = function (module) {
	  var $input = $('#' + module.container);
	  $input.on('change', function () {
	    var promise = $.ajax(module.url, {
	      dataType: 'json',
	      type: 'POST'
	    });
	    utils.setContainerProcessingState($('body'), promise, true, true);
	    promise.always(function () {
	      location.reload();
	    });
	  });



	};



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	__webpack_require__(37);

	var wpconfig = __webpack_require__(3);
	module.exports = function (module) {
	  var $container = $('#'+module.container);
	  var $tab = $container.find('.js-pgroup-tab:first');
	  if (!$tab.hasClass('active')){
	    $tab.parent().addClass('active');
	    $($tab.attr('href')).addClass('in active');
	  }
	};



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	module.exports = function () {
	  var ScrollReveal = __webpack_require__(85);
	  var gridSize = __webpack_require__(29);
	  var $body = $('body');

	  var callbacks = {
	    countUp: __webpack_require__(86)
	  };
	  var initReveal = function () {
	    if ($body.hasClass('scroll-animation')) {
	      if (gridSize.get() === 'lg') {
	        window.sr = new ScrollReveal({
	            enter:    'bottom',
	            move:     '8px',
	            over:     '0.6s',
	            wait:     '0s',
	            easing:   'ease',

	            scale:    { direction: 'up', power: '0' },
	            rotate:   { x: 0, y: 0, z: 0 },
	            vFactor:  0.9,
	            opacity:  0,
	            complete: function(el){
	              var animateClass = $(el).data('animate-end');
	              var animateCallback = $(el).data('animate-callback');
	              if(animateClass) $(el).addClass('animated ' + animateClass);
	              if(animateCallback) callbacks[animateCallback](el, 'scroll-reveal');
	            }
	          }
	        );
	      } else {
	        $body.removeClass('scroll-animation');
	      }
	    }

	  };

	  initReveal();

	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 85 */,
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {'use strict';
	module.exports = function (el, params) {
	  var CountUp = __webpack_require__(87);
	  if(params === 'scroll-reveal') {
	    var $counter = $(el).find('.js-count-up');
	    var $counterValueEnd = $counter.data('count-end') || 0;
	    var $counterValueStart= $counter.data('count-start') || 0;
	    var $counterValueDuration= $counter.data('count-duration') || 2;
	    var options = {
	      useEasing : true,
	      useGrouping : true,
	      separator : ' ',
	      decimal : '.',
	      prefix : '',
	      suffix : ''
	    };

	    var counterAnim = new CountUp($counter[0], $counterValueStart, $counterValueEnd, 0, $counterValueDuration, options);
	    counterAnim.start();
	  }
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 87 */,
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	var _ = __webpack_require__(4);
	var CountUp = __webpack_require__(87);

	var reveal = function (selector, options, delay) {
	  if(!$(selector).length) return;
	  sr.reveal(selector, options, delay);
	};

	module.exports = function (modules) {
	  var ScrollReveal = __webpack_require__(85);

	  window.sr = ScrollReveal({
	    //reset: true,
	    viewFactor: 0.3,
	    duration: 800
	  });


	  var gridSize = __webpack_require__(29);
	  var $body = $('body');

	  var animate = {
	    propertyGroup: function (module) {
	      reveal('#' + module.container + ' .properties__item', {
	        distance: '150px',
	        origin: 'bottom',
	        scale: 1,
	        opacity: 0
	      }, 120);

	    },
	    features: function (module) {
	      reveal('#' + module.container + ' .widget__title', {
	        distance: '90px',
	        origin: 'right'
	      });
	      reveal('#' + module.container + ' .widget__headline', {
	        distance: '90px',
	        origin: 'right'
	      });
	      reveal('#' + module.container + ' .feature__item', {
	        distance: '90px',
	        origin: 'right'
	      }, 200);

	    },
	    workerIndex: function (module) {
	      reveal('#' + module.container + ' .worker__item', {
	        distance: '150px',
	        origin: 'bottom',
	        scale: 1,
	        opacity: 0
	      }, 120);

	    },
	    articleGrid: function (module) {
	      reveal('#' + module.container + ' .article__item', {
	        distance: '0px',
	        origin: 'bottom',
	        scale: 0.5,
	        opacity: 0
	      }, 120);

	    },
	    achievement: function (module) {
	      $('#' + module.container + ' .js-count-up').text(' ');
	      reveal('#' + module.container + ' .achievement__item', {
	        distance: '0px',
	        origin: 'bottom',
	        scale: 0.5,
	        opacity: 0,
	        afterReveal : function(domEl) {
	          var $counter = $(domEl).find('.js-count-up');
	          var $counterValueEnd = $counter.data('count-end') || 0;
	          var $counterValueStart= $counter.data('count-start') || 0;
	          var $counterValueDuration= $counter.data('count-duration') || 2;
	          var options = {
	            useEasing : true,
	            useGrouping : true,
	            separator : ' ',
	            decimal : '.',
	            prefix : '',
	            suffix : ''
	          };

	          var counterAnim = new CountUp($counter[0], $counterValueStart, $counterValueEnd, 0, $counterValueDuration, options);
	          counterAnim.start();
	        }
	      }, 250);

	    },
	    testimonials: function (module) {
	      reveal('#' + module.container, {
	        distance: '0px',
	        scale: 0.5,
	        opacity: 0
	      }, 120);

	    },
	    goSubmit: function (module) {
	      reveal('#' + module.container, {
	        distance: '0px',
	        scale: 0.5,
	        opacity: 0
	      }, 120);

	    },
	    partners: function (module) {
	      reveal('#' + module.container, {
	        distance: '0px',
	        scale: 0.5,
	        opacity: 0
	      }, 120);

	    },
	    // testimonials: require('./sections/testimonials'),
	    // partners: require('./sections/partners'),
	    // propslider: require('./sections/property-slider'),
	    // propmap: require('./sections/property-map'),
	    // panoramaMapSwitcher: require('./sections/panorama-map'),
	    // propertyAreaSwitcher: require('./sections/property-area-switcher')
	  };
	  if (gridSize.get() === 'lg') {

	    _.each(modules, function(module_instances){
	      _.each(module_instances, function (module) {
	        if (animate[module.name] && module.animate) {
	          animate[module.name](module);
	        }
	      });
	    });

	    //reveal('.js-countcircles > div', circlesReveal, 100);
	    reveal('.nextevent--countcircles .nextevent__details', {
	      distance: '50px',
	      origin: 'bottom',
	      scale: 0.8,
	      opacity: 0.8
	    });


	    // about simple
	    reveal('.about--simple .about__details', {
	      distance: '90px',
	      origin: 'right'
	    });

	    // sermon main
	    reveal('.sermon--main .listing__item', {
	      distance: '30px',
	      origin: 'top'
	    }, 120);

	    reveal('.sermon--main .sermon__link-item', {
	      scale: 1.3
	    }, 20);

	    // sermon--ordered
	    reveal('.sermon--ordered .sermon__item', {
	      distance: '30px',
	      origin: 'bottom',
	      rotate: {z: 10},
	    }, 120);

	    reveal('.sermon--ordered .sermon__link-item', {
	      scale: 1.3
	    }, 20);


	    // event main
	    reveal('.event--main .listing__item', {
	      distance: '50px',
	      origin: 'bottom',
	      rotate: {x: 100}
	    }, 120);

	    // event--split
	    reveal('.event--split .event__item', {
	      distance: '50px',
	      origin: 'bottom',
	      rotate: {y: 100}
	    }, 120);


	    // post main
	    reveal('.post--main .post__item--0', {
	      distance: '150px',
	      origin: 'left'
	    });

	    reveal('.post--main .post__item--1', {
	      distance: '150px',
	      origin: 'top',
	      delay: 50
	    });

	    reveal('.post--main .post__item--2', {
	      distance: '150px',
	      origin: 'right',
	      delay: 100
	    });
	    // nextevent--countpanel
	    reveal('.nextevent--countpanel .countdown--panel', {
	      rotate: {x: 100}
	    });
	    reveal('.nextevent--countpanel .nextevent__preview', {
	      distance: '50%',
	      origin: 'left'
	    });
	    reveal('.nextevent--countpanel .nextevent__details', {
	      distance: '50%',
	      origin: 'right'
	    });

	    //  nextevent--counttimer
	    reveal('.nextevent--counttimer .nextevent__preview', {
	      distance: '50%',
	      origin: 'bottom'
	    });
	    reveal('.nextevent--counttimer .nextevent__details', {
	      distance: '50%',
	      origin: 'bottom'
	    });

	    //about--columns
	    reveal('.about--columns .about__item', {
	      distance: '50%',
	      origin: 'bottom'
	    }, 100);
	    //sermon--column
	    reveal('.sermon--column .sermon__item', {
	      rotate: {y: 100}
	    }, 150);


	    // cause--donation
	    reveal('.cause--donation .cause__details', {
	      distance: '50%',
	      origin: 'bottom'
	    });
	    reveal('.cause--donation .cause__counter', {
	      distance: '50%',
	      origin: 'left'
	    });
	    reveal('.cause--donation .cause__preview', {
	      distance: '50%',
	      origin: 'right'
	    });

	    //event--columns

	    reveal('.event--columns .event__item', {
	      scale: 1.3
	    }, 150);

	    //event--columns
	    reveal('.post--standart .post__item', {
	      distance: '50%',
	      origin: 'right'
	    }, 150);

	    //about--minimal
	    reveal('.about--minimal .about__item', {
	      distance: '50px',
	      origin: 'top',
	      scale: 1.2
	    }, 200);

	    //ministry--gallery
	    reveal('.ministry--gallery .ministry__gallery-item', {
	      distance: '150px',
	      origin: 'bottom',
	      scale: 1
	    }, 150);

	    //post--preview
	    reveal('.post--preview .post__item', {
	      distance: '150px',
	      origin: 'bottom',
	      scale: 1
	    }, 200);

	    //post--masonry
	    reveal('.post--masonry .post__item', {
	      distance: '50px',
	      origin: 'bottom',
	      scale: 1
	    });

	  }
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var ajax = __webpack_require__(48);
	var wpconfig = __webpack_require__(3);

	exports.initRegisterForm = function () {
	  var $form = $('.js-register-form');
	  ajax.form($form, wpconfig.route.register, {
	    useParsley: true,
	    callback: function () {
	      $form.hide();
	      $('.js-postreg-msg').removeClass('hidden');
	    }
	  });
	};

	exports.initLoginForm = function () {
	  ajax.form($('.js-login-form'), wpconfig.route.login, {
	    useParsley: true,
	    callback: function () {
	      window.location.reload();
	    }
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {"use strict";
	module.exports = function () {
	  function closeMenu(event) {
	    var clickover = $(event.target);
	    var _opened = $(".navbar-collapse").hasClass("collapse in");
	    if (_opened === true && !clickover.hasClass("js-navbar-toggle")) {
	      $(".js-navbar-toggle").click();
	    }
	  }

	  function openDropdown(event, dropdown) {
	    closeMenu(event);
	    $('.auth__nav-item').removeClass('open');
	    $(dropdown).closest('li').addClass('open');
	  }

	  $(document).on('click', function () {
	    $('.js-restore-form').closest('li').removeClass('open');
	  });

	  $('.js-user-login-btn').on('click', function (event) {
	    closeMenu(event);
	    $('.auth__nav-item').removeClass('open');
	    if ($(this).hasClass('active')) {
	      $(this).removeClass('active')
	    } else {
	      $(this).addClass('active');
	      $('.js-login-form').closest('li').addClass('open');
	    }
	    return false;
	  });

	  $('.js-user-logged-btn').on('click', function (event) {
	    closeMenu(event);
	    $('.auth__nav-item').removeClass('open');
	    if ($(this).hasClass('active')) {
	      $(this).removeClass('active')
	    } else {
	      $(this).addClass('active');
	      $('.js-user-logged-in').closest('li').addClass('open');
	    }
	    return false;
	  });

	  $('.js-user-register').on('click', function (event) {
	    openDropdown(event, '.js-register-form');
	  });
	  $('.js-user-restore').on('click', function (event) {
	    openDropdown(event, '.js-restore-form');
	  });
	  $('.js-restore-form').on('click', function (event) {
	    event.stopPropagation();
	  });
	  $('.js-user-login').on('click', function (event) {
	    openDropdown(event, '.js-login-form');
	  });
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {var ajax = __webpack_require__(48);
	var utils = __webpack_require__(7);
	module.exports = function () {
	  var $propertyList = $('.js-property-list');
	  if (!$propertyList.length) {
	    return;
	  }

	  $propertyList.on('click', '.js-property-hide', function () {
	    var $element = $(this);
	    var $container = $element.closest('.js-property-item');
	    ajax
	      .buildAjaxFromElement($element, $container)
	      .done(function (response) {
	        $container
	          .find('.js-property-status')
	          .removeClass('properties__state--default')
	          .addClass('properties__state--hidden')
	          .html(response.result.label)
	        ;
	        $element.addClass('hide');
	        $container.find('.js-property-show').removeClass('hide');
	      })
	    ;
	    return false;
	  });


	  $propertyList.on('click', '.js-property-show', function () {
	    var $element = $(this);
	    var $container = $element.closest('.js-property-item');
	    ajax
	      .buildAjaxFromElement($element, $container)
	      .done(function (response) {
	        $container
	          .find('.js-property-status')
	          .removeClass('properties__state--hidden')
	          .addClass('properties__state--default')
	          .html(response.result.label)
	        ;
	        $element.addClass('hide');
	        $container.find('.js-property-hide').removeClass('hide');
	      })
	    ;
	    return false;
	  });

	  (function () {
	    var data;
	    var $button;
	    var $modal = $('#delete-modal');
	    $modal
	      .on('show.bs.modal', function (event) {
	        $button = $(event.relatedTarget);
	        data = {
	          params: ajax.parseAjaxDataParams($button),
	          url: $button.data('url')
	        };
	      })
	      .on('click', '.js-submit', function (event) {
	        var promise = $.ajax(data.url, {
	          data: data.params,
	          dataType: 'json',
	          type: 'POST'
	        });
	        utils.setContainerProcessingState($modal, promise, true);

	        promise
	          .done(function () {
	            $button.closest('.js-property-item-container').remove();
	          })
	          .always(function () {
	          $modal.modal('hide');
	        })
	        ;
	      })
	    ;
	  })();

	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($) {module.exports = function () {
	  __webpack_require__(93);
	  var Dropzone = __webpack_require__(94);
	  var _ = __webpack_require__(4);
	  var wpconfig = __webpack_require__(3);

	  Dropzone.options.cf47rsPropsubmitImages = false;
	  Dropzone.options.cf47rsPropsubmitAttachments = false;

	  var thumbTemplate = wpconfig.template.dropzoneFileThumb;
	  var initDropzone = function (id) {
	    var $container = $(id);
	    if (!$container.length){
	      return;
	    }
	    var propsubmitDropzone = new Dropzone('div' + id, {
	      parallelUploads: 100,
	      maxFiles: 100,
	      addRemoveLinks: true
	    });
	    var elementMap = {};
	    var template = function (index) {
	      return 'propsubmit[images][' + index + ']';
	    };
	    var uploadedFiles = 0;


	    var prototype = $container.data('prototype');


	    $container
	      .sortable({
	        items: '.dz-preview'
	      })
	      .bind('sortupdate', function (e, ui) {
	        var items = $container.find('.dz-preview');
	        _.each(elementMap, function (item, index) {
	          var relativeIndex = items.index(item);
	          $('#' + index).prop('name', template(relativeIndex));
	        });
	      })
	    ;

	    propsubmitDropzone
	      .on("success", function (file, responseText) {
	        var $input;
	        $input = $(prototype.replace(/__name__/g, uploadedFiles));
	        $input.val(responseText.result.id);
	        $input.appendTo($container);
	        file.inputId = $input.prop('id');
	        uploadedFiles += 1;
	        if (!responseText.result.isImage) {
	          this.emit("thumbnail", file);
	        }
	      })
	      .on("removedfile", function (file) {
	        $('#' + file.inputId).remove();
	      })
	    ;

	    propsubmitDropzone.on('addedfile', function (file) {
	      elementMap[file.inputId] = file.previewElement;
	      $container.sortable();
	    });

	    propsubmitDropzone.on('thumbnail', function (event, src) {
	      if (src === undefined) {
	        $(event.previewElement).find('[data-dz-thumbnail]').replaceWith(thumbTemplate())
	      }
	    });


	    $container.find('.js-item').each(function () {
	      var $item = $(this);
	      var mockFile = {name: $item.data('name'), inputId: $item.prop('id'), size: $item.data('size')};
	      propsubmitDropzone.emit("addedfile", mockFile);
	      propsubmitDropzone.emit("thumbnail", mockFile, $item.data('src'));
	      propsubmitDropzone.emit("complete", mockFile);
	      uploadedFiles += 1;
	    });

	  };

	  initDropzone('#cf47rs_propsubmit_images');
	  initDropzone('#cf47rs_propsubmit_attachments');


	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }
]);